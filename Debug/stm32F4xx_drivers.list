
stm32F4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001974  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  08001b04  08001b04  00002b04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001bf8  08001bf8  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  08001bf8  08001bf8  00002bf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001c00  08001c00  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001c00  08001c00  00002c00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001c04  08001c04  00002c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001c08  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000305c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0000305c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0000305c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b41  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000318  00000000  00000000  00003bcd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00003ee8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00003fb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000022f7  00000000  00000000  0000403c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000012a8  00000000  00000000  00006333  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009253  00000000  00000000  000075db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0001082e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000c94  00000000  00000000  00010874  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000068  00000000  00000000  00011508  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000005c 	.word	0x2000005c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08001aec 	.word	0x08001aec

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000060 	.word	0x20000060
 80001cc:	08001aec 	.word	0x08001aec

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <delay>:
#define HIGH 1
#define LOW 0
#define BTN_PRESSED LOW

void delay(void)
{
 8000270:	b480      	push	{r7}
 8000272:	b083      	sub	sp, #12
 8000274:	af00      	add	r7, sp, #0
	// this will introduce ~200ms delay when system clock is 16MHz
	for(uint32_t i = 0 ; i < 500000 ; i ++);
 8000276:	2300      	movs	r3, #0
 8000278:	607b      	str	r3, [r7, #4]
 800027a:	e002      	b.n	8000282 <delay+0x12>
 800027c:	687b      	ldr	r3, [r7, #4]
 800027e:	3301      	adds	r3, #1
 8000280:	607b      	str	r3, [r7, #4]
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a04      	ldr	r2, [pc, #16]	@ (8000298 <delay+0x28>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d9f8      	bls.n	800027c <delay+0xc>
}
 800028a:	bf00      	nop
 800028c:	bf00      	nop
 800028e:	370c      	adds	r7, #12
 8000290:	46bd      	mov	sp, r7
 8000292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000296:	4770      	bx	lr
 8000298:	0007a11f 	.word	0x0007a11f

0800029c <main>:

int main(void)
{
 800029c:	b580      	push	{r7, lr}
 800029e:	b086      	sub	sp, #24
 80002a0:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed, GPIOBtn;

	memset(&GpioLed,0,sizeof(GpioLed));
 80002a2:	f107 030c 	add.w	r3, r7, #12
 80002a6:	220c      	movs	r2, #12
 80002a8:	2100      	movs	r1, #0
 80002aa:	4618      	mov	r0, r3
 80002ac:	f000 fd71 	bl	8000d92 <memset>
	memset(&GPIOBtn,0,sizeof(GpioLed));
 80002b0:	463b      	mov	r3, r7
 80002b2:	220c      	movs	r2, #12
 80002b4:	2100      	movs	r1, #0
 80002b6:	4618      	mov	r0, r3
 80002b8:	f000 fd6b 	bl	8000d92 <memset>

	//this is led gpio configuration
	GpioLed.pGPIOx = GPIOD;
 80002bc:	4b1a      	ldr	r3, [pc, #104]	@ (8000328 <main+0x8c>)
 80002be:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 80002c0:	230c      	movs	r3, #12
 80002c2:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80002c4:	2301      	movs	r3, #1
 80002c6:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 80002c8:	2300      	movs	r3, #0
 80002ca:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80002cc:	2300      	movs	r3, #0
 80002ce:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80002d0:	2300      	movs	r3, #0
 80002d2:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 80002d4:	2101      	movs	r1, #1
 80002d6:	4814      	ldr	r0, [pc, #80]	@ (8000328 <main+0x8c>)
 80002d8:	f000 f868 	bl	80003ac <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 80002dc:	f107 030c 	add.w	r3, r7, #12
 80002e0:	4618      	mov	r0, r3
 80002e2:	f000 f94b 	bl	800057c <GPIO_Init>


	//this is btn gpio configuration
	GPIOBtn.pGPIOx = GPIOD;
 80002e6:	4b10      	ldr	r3, [pc, #64]	@ (8000328 <main+0x8c>)
 80002e8:	603b      	str	r3, [r7, #0]
	GPIOBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 80002ea:	2305      	movs	r3, #5
 80002ec:	713b      	strb	r3, [r7, #4]
	GPIOBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 80002ee:	2304      	movs	r3, #4
 80002f0:	717b      	strb	r3, [r7, #5]
	GPIOBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80002f2:	2302      	movs	r3, #2
 80002f4:	71bb      	strb	r3, [r7, #6]
	GPIOBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 80002f6:	2301      	movs	r3, #1
 80002f8:	71fb      	strb	r3, [r7, #7]

	GPIO_PeriClockControl(GPIOD,ENABLE);
 80002fa:	2101      	movs	r1, #1
 80002fc:	480a      	ldr	r0, [pc, #40]	@ (8000328 <main+0x8c>)
 80002fe:	f000 f855 	bl	80003ac <GPIO_PeriClockControl>

	GPIO_Init(&GPIOBtn);
 8000302:	463b      	mov	r3, r7
 8000304:	4618      	mov	r0, r3
 8000306:	f000 f939 	bl	800057c <GPIO_Init>

	GPIO_WriteToOutputPin(GPIOD,GPIO_PIN_NO_12,GPIO_PIN_RESET);
 800030a:	2200      	movs	r2, #0
 800030c:	210c      	movs	r1, #12
 800030e:	4806      	ldr	r0, [pc, #24]	@ (8000328 <main+0x8c>)
 8000310:	f000 fae0 	bl	80008d4 <GPIO_WriteToOutputPin>
	//IRQ configurations
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5,NVIC_IRQ_PRI15);
 8000314:	210f      	movs	r1, #15
 8000316:	2017      	movs	r0, #23
 8000318:	f000 fbac 	bl	8000a74 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5,ENABLE);
 800031c:	2101      	movs	r1, #1
 800031e:	2017      	movs	r0, #23
 8000320:	f000 fb22 	bl	8000968 <GPIO_IRQInterruptConfig>

    while(1);
 8000324:	bf00      	nop
 8000326:	e7fd      	b.n	8000324 <main+0x88>
 8000328:	40020c00 	.word	0x40020c00

0800032c <EXTI9_5_IRQHandler>:

}


void EXTI9_5_IRQHandler(void)
{
 800032c:	b580      	push	{r7, lr}
 800032e:	af00      	add	r7, sp, #0
    delay(); //200ms . wait till button de-bouncing gets over
 8000330:	f7ff ff9e 	bl	8000270 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_5); //clear the pending event from exti line
 8000334:	2005      	movs	r0, #5
 8000336:	f000 fbdb 	bl	8000af0 <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 800033a:	210c      	movs	r1, #12
 800033c:	4805      	ldr	r0, [pc, #20]	@ (8000354 <EXTI9_5_IRQHandler+0x28>)
 800033e:	f000 fafd 	bl	800093c <GPIO_ToggleOutputPin>
	delay();
 8000342:	f7ff ff95 	bl	8000270 <delay>
	GPIO_ToggleOutputPin(GPIOD,GPIO_PIN_NO_12);
 8000346:	210c      	movs	r1, #12
 8000348:	4802      	ldr	r0, [pc, #8]	@ (8000354 <EXTI9_5_IRQHandler+0x28>)
 800034a:	f000 faf7 	bl	800093c <GPIO_ToggleOutputPin>
}
 800034e:	bf00      	nop
 8000350:	bd80      	pop	{r7, pc}
 8000352:	bf00      	nop
 8000354:	40020c00 	.word	0x40020c00

08000358 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000358:	480d      	ldr	r0, [pc, #52]	@ (8000390 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800035a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800035c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000360:	480c      	ldr	r0, [pc, #48]	@ (8000394 <LoopForever+0x6>)
  ldr r1, =_edata
 8000362:	490d      	ldr	r1, [pc, #52]	@ (8000398 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000364:	4a0d      	ldr	r2, [pc, #52]	@ (800039c <LoopForever+0xe>)
  movs r3, #0
 8000366:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000368:	e002      	b.n	8000370 <LoopCopyDataInit>

0800036a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800036a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800036c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800036e:	3304      	adds	r3, #4

08000370 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000370:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000372:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000374:	d3f9      	bcc.n	800036a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000376:	4a0a      	ldr	r2, [pc, #40]	@ (80003a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000378:	4c0a      	ldr	r4, [pc, #40]	@ (80003a4 <LoopForever+0x16>)
  movs r3, #0
 800037a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800037c:	e001      	b.n	8000382 <LoopFillZerobss>

0800037e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800037e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000380:	3204      	adds	r2, #4

08000382 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000382:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000384:	d3fb      	bcc.n	800037e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000386:	f000 fd53 	bl	8000e30 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800038a:	f7ff ff87 	bl	800029c <main>

0800038e <LoopForever>:

LoopForever:
  b LoopForever
 800038e:	e7fe      	b.n	800038e <LoopForever>
  ldr   r0, =_estack
 8000390:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000394:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000398:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 800039c:	08001c08 	.word	0x08001c08
  ldr r2, =_sbss
 80003a0:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80003a4:	200001c8 	.word	0x200001c8

080003a8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003a8:	e7fe      	b.n	80003a8 <ADC_IRQHandler>
	...

080003ac <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80003ac:	b480      	push	{r7}
 80003ae:	b083      	sub	sp, #12
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	6078      	str	r0, [r7, #4]
 80003b4:	460b      	mov	r3, r1
 80003b6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80003b8:	78fb      	ldrb	r3, [r7, #3]
 80003ba:	2b01      	cmp	r3, #1
 80003bc:	d162      	bne.n	8000484 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4a64      	ldr	r2, [pc, #400]	@ (8000554 <GPIO_PeriClockControl+0x1a8>)
 80003c2:	4293      	cmp	r3, r2
 80003c4:	d106      	bne.n	80003d4 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80003c6:	4b64      	ldr	r3, [pc, #400]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80003c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ca:	4a63      	ldr	r2, [pc, #396]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80003cc:	f043 0301 	orr.w	r3, r3, #1
 80003d0:	6313      	str	r3, [r2, #48]	@ 0x30
				}


	}

}
 80003d2:	e0b9      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOB)
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	4a61      	ldr	r2, [pc, #388]	@ (800055c <GPIO_PeriClockControl+0x1b0>)
 80003d8:	4293      	cmp	r3, r2
 80003da:	d106      	bne.n	80003ea <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80003dc:	4b5e      	ldr	r3, [pc, #376]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80003de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003e0:	4a5d      	ldr	r2, [pc, #372]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80003e2:	f043 0302 	orr.w	r3, r3, #2
 80003e6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003e8:	e0ae      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOC)
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	4a5c      	ldr	r2, [pc, #368]	@ (8000560 <GPIO_PeriClockControl+0x1b4>)
 80003ee:	4293      	cmp	r3, r2
 80003f0:	d106      	bne.n	8000400 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80003f2:	4b59      	ldr	r3, [pc, #356]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80003f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003f6:	4a58      	ldr	r2, [pc, #352]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80003f8:	f043 0304 	orr.w	r3, r3, #4
 80003fc:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003fe:	e0a3      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOD)
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	4a58      	ldr	r2, [pc, #352]	@ (8000564 <GPIO_PeriClockControl+0x1b8>)
 8000404:	4293      	cmp	r3, r2
 8000406:	d106      	bne.n	8000416 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000408:	4b53      	ldr	r3, [pc, #332]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 800040a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800040c:	4a52      	ldr	r2, [pc, #328]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 800040e:	f043 0308 	orr.w	r3, r3, #8
 8000412:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000414:	e098      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOE)
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4a53      	ldr	r2, [pc, #332]	@ (8000568 <GPIO_PeriClockControl+0x1bc>)
 800041a:	4293      	cmp	r3, r2
 800041c:	d106      	bne.n	800042c <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800041e:	4b4e      	ldr	r3, [pc, #312]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000420:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000422:	4a4d      	ldr	r2, [pc, #308]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000424:	f043 0310 	orr.w	r3, r3, #16
 8000428:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800042a:	e08d      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOF)
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	4a4f      	ldr	r2, [pc, #316]	@ (800056c <GPIO_PeriClockControl+0x1c0>)
 8000430:	4293      	cmp	r3, r2
 8000432:	d106      	bne.n	8000442 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000434:	4b48      	ldr	r3, [pc, #288]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000436:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000438:	4a47      	ldr	r2, [pc, #284]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 800043a:	f043 0320 	orr.w	r3, r3, #32
 800043e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000440:	e082      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOG)
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	4a4a      	ldr	r2, [pc, #296]	@ (8000570 <GPIO_PeriClockControl+0x1c4>)
 8000446:	4293      	cmp	r3, r2
 8000448:	d106      	bne.n	8000458 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800044a:	4b43      	ldr	r3, [pc, #268]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 800044c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800044e:	4a42      	ldr	r2, [pc, #264]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000450:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000454:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000456:	e077      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOH)
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	4a46      	ldr	r2, [pc, #280]	@ (8000574 <GPIO_PeriClockControl+0x1c8>)
 800045c:	4293      	cmp	r3, r2
 800045e:	d106      	bne.n	800046e <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000460:	4b3d      	ldr	r3, [pc, #244]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000462:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000464:	4a3c      	ldr	r2, [pc, #240]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000466:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800046a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800046c:	e06c      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
		}else if (pGPIOx == GPIOI)
 800046e:	687b      	ldr	r3, [r7, #4]
 8000470:	4a41      	ldr	r2, [pc, #260]	@ (8000578 <GPIO_PeriClockControl+0x1cc>)
 8000472:	4293      	cmp	r3, r2
 8000474:	d168      	bne.n	8000548 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000476:	4b38      	ldr	r3, [pc, #224]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000478:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800047a:	4a37      	ldr	r2, [pc, #220]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 800047c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000480:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000482:	e061      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	4a33      	ldr	r2, [pc, #204]	@ (8000554 <GPIO_PeriClockControl+0x1a8>)
 8000488:	4293      	cmp	r3, r2
 800048a:	d106      	bne.n	800049a <GPIO_PeriClockControl+0xee>
					GPIOA_PCLK_DI();
 800048c:	4b32      	ldr	r3, [pc, #200]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 800048e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000490:	4a31      	ldr	r2, [pc, #196]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000492:	f023 0301 	bic.w	r3, r3, #1
 8000496:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000498:	e056      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOB)
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	4a2f      	ldr	r2, [pc, #188]	@ (800055c <GPIO_PeriClockControl+0x1b0>)
 800049e:	4293      	cmp	r3, r2
 80004a0:	d106      	bne.n	80004b0 <GPIO_PeriClockControl+0x104>
					GPIOB_PCLK_DI();
 80004a2:	4b2d      	ldr	r3, [pc, #180]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80004a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004a6:	4a2c      	ldr	r2, [pc, #176]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80004a8:	f023 0302 	bic.w	r3, r3, #2
 80004ac:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004ae:	e04b      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOC)
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	4a2b      	ldr	r2, [pc, #172]	@ (8000560 <GPIO_PeriClockControl+0x1b4>)
 80004b4:	4293      	cmp	r3, r2
 80004b6:	d106      	bne.n	80004c6 <GPIO_PeriClockControl+0x11a>
					GPIOC_PCLK_DI();
 80004b8:	4b27      	ldr	r3, [pc, #156]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80004ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004bc:	4a26      	ldr	r2, [pc, #152]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80004be:	f023 0304 	bic.w	r3, r3, #4
 80004c2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004c4:	e040      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOD)
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	4a26      	ldr	r2, [pc, #152]	@ (8000564 <GPIO_PeriClockControl+0x1b8>)
 80004ca:	4293      	cmp	r3, r2
 80004cc:	d106      	bne.n	80004dc <GPIO_PeriClockControl+0x130>
					GPIOD_PCLK_DI();
 80004ce:	4b22      	ldr	r3, [pc, #136]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80004d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004d2:	4a21      	ldr	r2, [pc, #132]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80004d4:	f023 0308 	bic.w	r3, r3, #8
 80004d8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004da:	e035      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOE)
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	4a22      	ldr	r2, [pc, #136]	@ (8000568 <GPIO_PeriClockControl+0x1bc>)
 80004e0:	4293      	cmp	r3, r2
 80004e2:	d106      	bne.n	80004f2 <GPIO_PeriClockControl+0x146>
					GPIOE_PCLK_DI();
 80004e4:	4b1c      	ldr	r3, [pc, #112]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80004e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004e8:	4a1b      	ldr	r2, [pc, #108]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80004ea:	f023 0310 	bic.w	r3, r3, #16
 80004ee:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004f0:	e02a      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOF)
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	4a1d      	ldr	r2, [pc, #116]	@ (800056c <GPIO_PeriClockControl+0x1c0>)
 80004f6:	4293      	cmp	r3, r2
 80004f8:	d106      	bne.n	8000508 <GPIO_PeriClockControl+0x15c>
					GPIOF_PCLK_DI();
 80004fa:	4b17      	ldr	r3, [pc, #92]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 80004fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004fe:	4a16      	ldr	r2, [pc, #88]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000500:	f023 0320 	bic.w	r3, r3, #32
 8000504:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000506:	e01f      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOG)
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	4a19      	ldr	r2, [pc, #100]	@ (8000570 <GPIO_PeriClockControl+0x1c4>)
 800050c:	4293      	cmp	r3, r2
 800050e:	d106      	bne.n	800051e <GPIO_PeriClockControl+0x172>
					GPIOG_PCLK_DI();
 8000510:	4b11      	ldr	r3, [pc, #68]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000512:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000514:	4a10      	ldr	r2, [pc, #64]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000516:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800051a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800051c:	e014      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOH)
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	4a14      	ldr	r2, [pc, #80]	@ (8000574 <GPIO_PeriClockControl+0x1c8>)
 8000522:	4293      	cmp	r3, r2
 8000524:	d106      	bne.n	8000534 <GPIO_PeriClockControl+0x188>
					GPIOH_PCLK_DI();
 8000526:	4b0c      	ldr	r3, [pc, #48]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000528:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800052a:	4a0b      	ldr	r2, [pc, #44]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 800052c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000530:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000532:	e009      	b.n	8000548 <GPIO_PeriClockControl+0x19c>
				}else if (pGPIOx == GPIOI)
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	4a10      	ldr	r2, [pc, #64]	@ (8000578 <GPIO_PeriClockControl+0x1cc>)
 8000538:	4293      	cmp	r3, r2
 800053a:	d105      	bne.n	8000548 <GPIO_PeriClockControl+0x19c>
					GPIOI_PCLK_DI();
 800053c:	4b06      	ldr	r3, [pc, #24]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 800053e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000540:	4a05      	ldr	r2, [pc, #20]	@ (8000558 <GPIO_PeriClockControl+0x1ac>)
 8000542:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000546:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000548:	bf00      	nop
 800054a:	370c      	adds	r7, #12
 800054c:	46bd      	mov	sp, r7
 800054e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000552:	4770      	bx	lr
 8000554:	40020000 	.word	0x40020000
 8000558:	40023800 	.word	0x40023800
 800055c:	40020400 	.word	0x40020400
 8000560:	40020800 	.word	0x40020800
 8000564:	40020c00 	.word	0x40020c00
 8000568:	40021000 	.word	0x40021000
 800056c:	40021400 	.word	0x40021400
 8000570:	40021800 	.word	0x40021800
 8000574:	40021c00 	.word	0x40021c00
 8000578:	40022000 	.word	0x40022000

0800057c <GPIO_Init>:

/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800057c:	b480      	push	{r7}
 800057e:	b089      	sub	sp, #36	@ 0x24
 8000580:	af00      	add	r7, sp, #0
 8000582:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 8000584:	2300      	movs	r3, #0
 8000586:	61fb      	str	r3, [r7, #28]
	//1.configure the mode of GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG )
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	795b      	ldrb	r3, [r3, #5]
 800058c:	2b03      	cmp	r3, #3
 800058e:	d822      	bhi.n	80005d6 <GPIO_Init+0x5a>
	{
		//non-intertupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	795b      	ldrb	r3, [r3, #5]
 8000594:	461a      	mov	r2, r3
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	791b      	ldrb	r3, [r3, #4]
 800059a:	005b      	lsls	r3, r3, #1
 800059c:	fa02 f303 	lsl.w	r3, r2, r3
 80005a0:	61fb      	str	r3, [r7, #28]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	681b      	ldr	r3, [r3, #0]
 80005a6:	681a      	ldr	r2, [r3, #0]
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	791b      	ldrb	r3, [r3, #4]
 80005ac:	005b      	lsls	r3, r3, #1
 80005ae:	2103      	movs	r1, #3
 80005b0:	fa01 f303 	lsl.w	r3, r1, r3
 80005b4:	43db      	mvns	r3, r3
 80005b6:	4619      	mov	r1, r3
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	400a      	ands	r2, r1
 80005be:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	6819      	ldr	r1, [r3, #0]
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	69fa      	ldr	r2, [r7, #28]
 80005cc:	430a      	orrs	r2, r1
 80005ce:	601a      	str	r2, [r3, #0]
		temp = 0;
 80005d0:	2300      	movs	r3, #0
 80005d2:	61fb      	str	r3, [r7, #28]
 80005d4:	e0cc      	b.n	8000770 <GPIO_Init+0x1f4>

	}
	else
	{
		//interrupt mode
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	795b      	ldrb	r3, [r3, #5]
 80005da:	2b04      	cmp	r3, #4
 80005dc:	d117      	bne.n	800060e <GPIO_Init+0x92>
		{
			//configure the FTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005de:	4b4b      	ldr	r3, [pc, #300]	@ (800070c <GPIO_Init+0x190>)
 80005e0:	68db      	ldr	r3, [r3, #12]
 80005e2:	687a      	ldr	r2, [r7, #4]
 80005e4:	7912      	ldrb	r2, [r2, #4]
 80005e6:	4611      	mov	r1, r2
 80005e8:	2201      	movs	r2, #1
 80005ea:	408a      	lsls	r2, r1
 80005ec:	4611      	mov	r1, r2
 80005ee:	4a47      	ldr	r2, [pc, #284]	@ (800070c <GPIO_Init+0x190>)
 80005f0:	430b      	orrs	r3, r1
 80005f2:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005f4:	4b45      	ldr	r3, [pc, #276]	@ (800070c <GPIO_Init+0x190>)
 80005f6:	689b      	ldr	r3, [r3, #8]
 80005f8:	687a      	ldr	r2, [r7, #4]
 80005fa:	7912      	ldrb	r2, [r2, #4]
 80005fc:	4611      	mov	r1, r2
 80005fe:	2201      	movs	r2, #1
 8000600:	408a      	lsls	r2, r1
 8000602:	43d2      	mvns	r2, r2
 8000604:	4611      	mov	r1, r2
 8000606:	4a41      	ldr	r2, [pc, #260]	@ (800070c <GPIO_Init+0x190>)
 8000608:	400b      	ands	r3, r1
 800060a:	6093      	str	r3, [r2, #8]
 800060c:	e035      	b.n	800067a <GPIO_Init+0xfe>




		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	795b      	ldrb	r3, [r3, #5]
 8000612:	2b05      	cmp	r3, #5
 8000614:	d117      	bne.n	8000646 <GPIO_Init+0xca>
		{
			//configure the RTSR
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000616:	4b3d      	ldr	r3, [pc, #244]	@ (800070c <GPIO_Init+0x190>)
 8000618:	689b      	ldr	r3, [r3, #8]
 800061a:	687a      	ldr	r2, [r7, #4]
 800061c:	7912      	ldrb	r2, [r2, #4]
 800061e:	4611      	mov	r1, r2
 8000620:	2201      	movs	r2, #1
 8000622:	408a      	lsls	r2, r1
 8000624:	4611      	mov	r1, r2
 8000626:	4a39      	ldr	r2, [pc, #228]	@ (800070c <GPIO_Init+0x190>)
 8000628:	430b      	orrs	r3, r1
 800062a:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800062c:	4b37      	ldr	r3, [pc, #220]	@ (800070c <GPIO_Init+0x190>)
 800062e:	68db      	ldr	r3, [r3, #12]
 8000630:	687a      	ldr	r2, [r7, #4]
 8000632:	7912      	ldrb	r2, [r2, #4]
 8000634:	4611      	mov	r1, r2
 8000636:	2201      	movs	r2, #1
 8000638:	408a      	lsls	r2, r1
 800063a:	43d2      	mvns	r2, r2
 800063c:	4611      	mov	r1, r2
 800063e:	4a33      	ldr	r2, [pc, #204]	@ (800070c <GPIO_Init+0x190>)
 8000640:	400b      	ands	r3, r1
 8000642:	60d3      	str	r3, [r2, #12]
 8000644:	e019      	b.n	800067a <GPIO_Init+0xfe>


		}
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	795b      	ldrb	r3, [r3, #5]
 800064a:	2b06      	cmp	r3, #6
 800064c:	d115      	bne.n	800067a <GPIO_Init+0xfe>
		{
			//configure both FTSR and RTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800064e:	4b2f      	ldr	r3, [pc, #188]	@ (800070c <GPIO_Init+0x190>)
 8000650:	68db      	ldr	r3, [r3, #12]
 8000652:	687a      	ldr	r2, [r7, #4]
 8000654:	7912      	ldrb	r2, [r2, #4]
 8000656:	4611      	mov	r1, r2
 8000658:	2201      	movs	r2, #1
 800065a:	408a      	lsls	r2, r1
 800065c:	4611      	mov	r1, r2
 800065e:	4a2b      	ldr	r2, [pc, #172]	@ (800070c <GPIO_Init+0x190>)
 8000660:	430b      	orrs	r3, r1
 8000662:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000664:	4b29      	ldr	r3, [pc, #164]	@ (800070c <GPIO_Init+0x190>)
 8000666:	689b      	ldr	r3, [r3, #8]
 8000668:	687a      	ldr	r2, [r7, #4]
 800066a:	7912      	ldrb	r2, [r2, #4]
 800066c:	4611      	mov	r1, r2
 800066e:	2201      	movs	r2, #1
 8000670:	408a      	lsls	r2, r1
 8000672:	4611      	mov	r1, r2
 8000674:	4a25      	ldr	r2, [pc, #148]	@ (800070c <GPIO_Init+0x190>)
 8000676:	430b      	orrs	r3, r1
 8000678:	6093      	str	r3, [r2, #8]


		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint32_t temp1= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 800067a:	687b      	ldr	r3, [r7, #4]
 800067c:	791b      	ldrb	r3, [r3, #4]
 800067e:	089b      	lsrs	r3, r3, #2
 8000680:	b2db      	uxtb	r3, r3
 8000682:	61bb      	str	r3, [r7, #24]
		uint32_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 8000684:	687b      	ldr	r3, [r7, #4]
 8000686:	791b      	ldrb	r3, [r3, #4]
 8000688:	f003 0303 	and.w	r3, r3, #3
 800068c:	617b      	str	r3, [r7, #20]

		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800068e:	687b      	ldr	r3, [r7, #4]
 8000690:	681b      	ldr	r3, [r3, #0]
 8000692:	4a1f      	ldr	r2, [pc, #124]	@ (8000710 <GPIO_Init+0x194>)
 8000694:	4293      	cmp	r3, r2
 8000696:	d04d      	beq.n	8000734 <GPIO_Init+0x1b8>
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	4a1d      	ldr	r2, [pc, #116]	@ (8000714 <GPIO_Init+0x198>)
 800069e:	4293      	cmp	r3, r2
 80006a0:	d032      	beq.n	8000708 <GPIO_Init+0x18c>
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	4a1c      	ldr	r2, [pc, #112]	@ (8000718 <GPIO_Init+0x19c>)
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d02b      	beq.n	8000704 <GPIO_Init+0x188>
 80006ac:	687b      	ldr	r3, [r7, #4]
 80006ae:	681b      	ldr	r3, [r3, #0]
 80006b0:	4a1a      	ldr	r2, [pc, #104]	@ (800071c <GPIO_Init+0x1a0>)
 80006b2:	4293      	cmp	r3, r2
 80006b4:	d024      	beq.n	8000700 <GPIO_Init+0x184>
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	4a19      	ldr	r2, [pc, #100]	@ (8000720 <GPIO_Init+0x1a4>)
 80006bc:	4293      	cmp	r3, r2
 80006be:	d01d      	beq.n	80006fc <GPIO_Init+0x180>
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	4a17      	ldr	r2, [pc, #92]	@ (8000724 <GPIO_Init+0x1a8>)
 80006c6:	4293      	cmp	r3, r2
 80006c8:	d016      	beq.n	80006f8 <GPIO_Init+0x17c>
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	681b      	ldr	r3, [r3, #0]
 80006ce:	4a16      	ldr	r2, [pc, #88]	@ (8000728 <GPIO_Init+0x1ac>)
 80006d0:	4293      	cmp	r3, r2
 80006d2:	d00f      	beq.n	80006f4 <GPIO_Init+0x178>
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	681b      	ldr	r3, [r3, #0]
 80006d8:	4a14      	ldr	r2, [pc, #80]	@ (800072c <GPIO_Init+0x1b0>)
 80006da:	4293      	cmp	r3, r2
 80006dc:	d008      	beq.n	80006f0 <GPIO_Init+0x174>
 80006de:	687b      	ldr	r3, [r7, #4]
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	4a13      	ldr	r2, [pc, #76]	@ (8000730 <GPIO_Init+0x1b4>)
 80006e4:	4293      	cmp	r3, r2
 80006e6:	d101      	bne.n	80006ec <GPIO_Init+0x170>
 80006e8:	2308      	movs	r3, #8
 80006ea:	e024      	b.n	8000736 <GPIO_Init+0x1ba>
 80006ec:	2300      	movs	r3, #0
 80006ee:	e022      	b.n	8000736 <GPIO_Init+0x1ba>
 80006f0:	2307      	movs	r3, #7
 80006f2:	e020      	b.n	8000736 <GPIO_Init+0x1ba>
 80006f4:	2306      	movs	r3, #6
 80006f6:	e01e      	b.n	8000736 <GPIO_Init+0x1ba>
 80006f8:	2305      	movs	r3, #5
 80006fa:	e01c      	b.n	8000736 <GPIO_Init+0x1ba>
 80006fc:	2304      	movs	r3, #4
 80006fe:	e01a      	b.n	8000736 <GPIO_Init+0x1ba>
 8000700:	2303      	movs	r3, #3
 8000702:	e018      	b.n	8000736 <GPIO_Init+0x1ba>
 8000704:	2302      	movs	r3, #2
 8000706:	e016      	b.n	8000736 <GPIO_Init+0x1ba>
 8000708:	2301      	movs	r3, #1
 800070a:	e014      	b.n	8000736 <GPIO_Init+0x1ba>
 800070c:	40013c00 	.word	0x40013c00
 8000710:	40020000 	.word	0x40020000
 8000714:	40020400 	.word	0x40020400
 8000718:	40020800 	.word	0x40020800
 800071c:	40020c00 	.word	0x40020c00
 8000720:	40021000 	.word	0x40021000
 8000724:	40021400 	.word	0x40021400
 8000728:	40021800 	.word	0x40021800
 800072c:	40021c00 	.word	0x40021c00
 8000730:	40022000 	.word	0x40022000
 8000734:	2300      	movs	r3, #0
 8000736:	74fb      	strb	r3, [r7, #19]

		SYSCFG_PCLK_EN();
 8000738:	4b63      	ldr	r3, [pc, #396]	@ (80008c8 <GPIO_Init+0x34c>)
 800073a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800073c:	4a62      	ldr	r2, [pc, #392]	@ (80008c8 <GPIO_Init+0x34c>)
 800073e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000742:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2*4);
 8000744:	7cfa      	ldrb	r2, [r7, #19]
 8000746:	697b      	ldr	r3, [r7, #20]
 8000748:	009b      	lsls	r3, r3, #2
 800074a:	fa02 f303 	lsl.w	r3, r2, r3
 800074e:	4a5f      	ldr	r2, [pc, #380]	@ (80008cc <GPIO_Init+0x350>)
 8000750:	4619      	mov	r1, r3
 8000752:	69bb      	ldr	r3, [r7, #24]
 8000754:	3302      	adds	r3, #2
 8000756:	f842 1023 	str.w	r1, [r2, r3, lsl #2]



		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //EXTI lines 0–15 typically map to GPIO pins 0–15
 800075a:	4b5d      	ldr	r3, [pc, #372]	@ (80008d0 <GPIO_Init+0x354>)
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	687a      	ldr	r2, [r7, #4]
 8000760:	7912      	ldrb	r2, [r2, #4]
 8000762:	4611      	mov	r1, r2
 8000764:	2201      	movs	r2, #1
 8000766:	408a      	lsls	r2, r1
 8000768:	4611      	mov	r1, r2
 800076a:	4a59      	ldr	r2, [pc, #356]	@ (80008d0 <GPIO_Init+0x354>)
 800076c:	430b      	orrs	r3, r1
 800076e:	6013      	str	r3, [r2, #0]


	}


    temp = 0;
 8000770:	2300      	movs	r3, #0
 8000772:	61fb      	str	r3, [r7, #28]
	//2.configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	799b      	ldrb	r3, [r3, #6]
 8000778:	461a      	mov	r2, r3
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	791b      	ldrb	r3, [r3, #4]
 800077e:	005b      	lsls	r3, r3, #1
 8000780:	fa02 f303 	lsl.w	r3, r2, r3
 8000784:	61fb      	str	r3, [r7, #28]

	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	681b      	ldr	r3, [r3, #0]
 800078a:	689a      	ldr	r2, [r3, #8]
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	791b      	ldrb	r3, [r3, #4]
 8000790:	005b      	lsls	r3, r3, #1
 8000792:	2103      	movs	r1, #3
 8000794:	fa01 f303 	lsl.w	r3, r1, r3
 8000798:	43db      	mvns	r3, r3
 800079a:	4619      	mov	r1, r3
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	681b      	ldr	r3, [r3, #0]
 80007a0:	400a      	ands	r2, r1
 80007a2:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	6899      	ldr	r1, [r3, #8]
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	681b      	ldr	r3, [r3, #0]
 80007ae:	69fa      	ldr	r2, [r7, #28]
 80007b0:	430a      	orrs	r2, r1
 80007b2:	609a      	str	r2, [r3, #8]

	temp = 0;//calibrate temp
 80007b4:	2300      	movs	r3, #0
 80007b6:	61fb      	str	r3, [r7, #28]



	//3.configure the pull-up/ pull-down setting

	uint8_t upANDdown = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl;
 80007b8:	687b      	ldr	r3, [r7, #4]
 80007ba:	79db      	ldrb	r3, [r3, #7]
 80007bc:	74bb      	strb	r3, [r7, #18]
	uint8_t pinNumber = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	791b      	ldrb	r3, [r3, #4]
 80007c2:	747b      	strb	r3, [r7, #17]

	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2*pinNumber));
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	681b      	ldr	r3, [r3, #0]
 80007c8:	68da      	ldr	r2, [r3, #12]
 80007ca:	7c7b      	ldrb	r3, [r7, #17]
 80007cc:	005b      	lsls	r3, r3, #1
 80007ce:	2103      	movs	r1, #3
 80007d0:	fa01 f303 	lsl.w	r3, r1, r3
 80007d4:	43db      	mvns	r3, r3
 80007d6:	4619      	mov	r1, r3
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	681b      	ldr	r3, [r3, #0]
 80007dc:	400a      	ands	r2, r1
 80007de:	60da      	str	r2, [r3, #12]

	temp = (upANDdown << (2*pinNumber));
 80007e0:	7cba      	ldrb	r2, [r7, #18]
 80007e2:	7c7b      	ldrb	r3, [r7, #17]
 80007e4:	005b      	lsls	r3, r3, #1
 80007e6:	fa02 f303 	lsl.w	r3, r2, r3
 80007ea:	61fb      	str	r3, [r7, #28]

	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	681b      	ldr	r3, [r3, #0]
 80007f0:	68d9      	ldr	r1, [r3, #12]
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	69fa      	ldr	r2, [r7, #28]
 80007f8:	430a      	orrs	r2, r1
 80007fa:	60da      	str	r2, [r3, #12]

	temp = 0;
 80007fc:	2300      	movs	r3, #0
 80007fe:	61fb      	str	r3, [r7, #28]



	//4.configure the output type
    int8_t oType = pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType;
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	7a1b      	ldrb	r3, [r3, #8]
 8000804:	743b      	strb	r3, [r7, #16]
    pinNumber = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	791b      	ldrb	r3, [r3, #4]
 800080a:	747b      	strb	r3, [r7, #17]

    pGPIOHandle->pGPIOx->OTYPER &= ~(1 << pinNumber);
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	681b      	ldr	r3, [r3, #0]
 8000810:	685a      	ldr	r2, [r3, #4]
 8000812:	7c7b      	ldrb	r3, [r7, #17]
 8000814:	2101      	movs	r1, #1
 8000816:	fa01 f303 	lsl.w	r3, r1, r3
 800081a:	43db      	mvns	r3, r3
 800081c:	4619      	mov	r1, r3
 800081e:	687b      	ldr	r3, [r7, #4]
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	400a      	ands	r2, r1
 8000824:	605a      	str	r2, [r3, #4]
    temp = (oType << pinNumber);
 8000826:	f997 2010 	ldrsb.w	r2, [r7, #16]
 800082a:	7c7b      	ldrb	r3, [r7, #17]
 800082c:	fa02 f303 	lsl.w	r3, r2, r3
 8000830:	61fb      	str	r3, [r7, #28]
    pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000832:	687b      	ldr	r3, [r7, #4]
 8000834:	681b      	ldr	r3, [r3, #0]
 8000836:	6859      	ldr	r1, [r3, #4]
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	69fa      	ldr	r2, [r7, #28]
 800083e:	430a      	orrs	r2, r1
 8000840:	605a      	str	r2, [r3, #4]

    temp = 0;
 8000842:	2300      	movs	r3, #0
 8000844:	61fb      	str	r3, [r7, #28]



	//5.configure the alternate functionality
    if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN )
 8000846:	687b      	ldr	r3, [r7, #4]
 8000848:	795b      	ldrb	r3, [r3, #5]
 800084a:	2b02      	cmp	r3, #2
 800084c:	d135      	bne.n	80008ba <GPIO_Init+0x33e>
    {
    	//configure the alternate functionality registers
    	uint8_t temp1=0;//temp1: AFRL or AFRH ;
 800084e:	2300      	movs	r3, #0
 8000850:	73fb      	strb	r3, [r7, #15]
    	uint8_t temp2 = 0;//temp2: which pin;
 8000852:	2300      	movs	r3, #0
 8000854:	73bb      	strb	r3, [r7, #14]

    	temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000856:	687b      	ldr	r3, [r7, #4]
 8000858:	791b      	ldrb	r3, [r3, #4]
 800085a:	08db      	lsrs	r3, r3, #3
 800085c:	73fb      	strb	r3, [r7, #15]
    	temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	791b      	ldrb	r3, [r3, #4]
 8000862:	f003 0307 	and.w	r3, r3, #7
 8000866:	73bb      	strb	r3, [r7, #14]

    	pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2));
 8000868:	687b      	ldr	r3, [r7, #4]
 800086a:	681b      	ldr	r3, [r3, #0]
 800086c:	7bfa      	ldrb	r2, [r7, #15]
 800086e:	3208      	adds	r2, #8
 8000870:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000874:	7bbb      	ldrb	r3, [r7, #14]
 8000876:	009b      	lsls	r3, r3, #2
 8000878:	220f      	movs	r2, #15
 800087a:	fa02 f303 	lsl.w	r3, r2, r3
 800087e:	43db      	mvns	r3, r3
 8000880:	4618      	mov	r0, r3
 8000882:	687b      	ldr	r3, [r7, #4]
 8000884:	681b      	ldr	r3, [r3, #0]
 8000886:	7bfa      	ldrb	r2, [r7, #15]
 8000888:	4001      	ands	r1, r0
 800088a:	3208      	adds	r2, #8
 800088c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    	pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 8000890:	687b      	ldr	r3, [r7, #4]
 8000892:	681b      	ldr	r3, [r3, #0]
 8000894:	7bfa      	ldrb	r2, [r7, #15]
 8000896:	3208      	adds	r2, #8
 8000898:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800089c:	687b      	ldr	r3, [r7, #4]
 800089e:	7a5b      	ldrb	r3, [r3, #9]
 80008a0:	461a      	mov	r2, r3
 80008a2:	7bbb      	ldrb	r3, [r7, #14]
 80008a4:	009b      	lsls	r3, r3, #2
 80008a6:	fa02 f303 	lsl.w	r3, r2, r3
 80008aa:	4618      	mov	r0, r3
 80008ac:	687b      	ldr	r3, [r7, #4]
 80008ae:	681b      	ldr	r3, [r3, #0]
 80008b0:	7bfa      	ldrb	r2, [r7, #15]
 80008b2:	4301      	orrs	r1, r0
 80008b4:	3208      	adds	r2, #8
 80008b6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

    }



}
 80008ba:	bf00      	nop
 80008bc:	3724      	adds	r7, #36	@ 0x24
 80008be:	46bd      	mov	sp, r7
 80008c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008c4:	4770      	bx	lr
 80008c6:	bf00      	nop
 80008c8:	40023800 	.word	0x40023800
 80008cc:	40013800 	.word	0x40013800
 80008d0:	40013c00 	.word	0x40013c00

080008d4 <GPIO_WriteToOutputPin>:


}

void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{
 80008d4:	b580      	push	{r7, lr}
 80008d6:	b082      	sub	sp, #8
 80008d8:	af00      	add	r7, sp, #0
 80008da:	6078      	str	r0, [r7, #4]
 80008dc:	460b      	mov	r3, r1
 80008de:	70fb      	strb	r3, [r7, #3]
 80008e0:	4613      	mov	r3, r2
 80008e2:	70bb      	strb	r3, [r7, #2]
    if (Value == GPIO_PIN_SET)
 80008e4:	78bb      	ldrb	r3, [r7, #2]
 80008e6:	2b01      	cmp	r3, #1
 80008e8:	d109      	bne.n	80008fe <GPIO_WriteToOutputPin+0x2a>
    {
        pGPIOx->ODR |= (1 << PinNumber);
 80008ea:	687b      	ldr	r3, [r7, #4]
 80008ec:	695b      	ldr	r3, [r3, #20]
 80008ee:	78fa      	ldrb	r2, [r7, #3]
 80008f0:	2101      	movs	r1, #1
 80008f2:	fa01 f202 	lsl.w	r2, r1, r2
 80008f6:	431a      	orrs	r2, r3
 80008f8:	687b      	ldr	r3, [r7, #4]
 80008fa:	615a      	str	r2, [r3, #20]
    else
    {
        // Trigger a runtime error during development
        assert(!"Invalid Value passed to GPIO_WriteToOutputPin. Expected 0 or 1.");
    }
}
 80008fc:	e014      	b.n	8000928 <GPIO_WriteToOutputPin+0x54>
    else if (Value == GPIO_PIN_RESET)
 80008fe:	78bb      	ldrb	r3, [r7, #2]
 8000900:	2b00      	cmp	r3, #0
 8000902:	d10a      	bne.n	800091a <GPIO_WriteToOutputPin+0x46>
        pGPIOx->ODR &= ~(1 << PinNumber);
 8000904:	687b      	ldr	r3, [r7, #4]
 8000906:	695b      	ldr	r3, [r3, #20]
 8000908:	78fa      	ldrb	r2, [r7, #3]
 800090a:	2101      	movs	r1, #1
 800090c:	fa01 f202 	lsl.w	r2, r1, r2
 8000910:	43d2      	mvns	r2, r2
 8000912:	401a      	ands	r2, r3
 8000914:	687b      	ldr	r3, [r7, #4]
 8000916:	615a      	str	r2, [r3, #20]
}
 8000918:	e006      	b.n	8000928 <GPIO_WriteToOutputPin+0x54>
        assert(!"Invalid Value passed to GPIO_WriteToOutputPin. Expected 0 or 1.");
 800091a:	4b05      	ldr	r3, [pc, #20]	@ (8000930 <GPIO_WriteToOutputPin+0x5c>)
 800091c:	4a05      	ldr	r2, [pc, #20]	@ (8000934 <GPIO_WriteToOutputPin+0x60>)
 800091e:	f44f 71a6 	mov.w	r1, #332	@ 0x14c
 8000922:	4805      	ldr	r0, [pc, #20]	@ (8000938 <GPIO_WriteToOutputPin+0x64>)
 8000924:	f000 f900 	bl	8000b28 <__assert_func>
}
 8000928:	3708      	adds	r7, #8
 800092a:	46bd      	mov	sp, r7
 800092c:	bd80      	pop	{r7, pc}
 800092e:	bf00      	nop
 8000930:	08001b04 	.word	0x08001b04
 8000934:	08001b70 	.word	0x08001b70
 8000938:	08001b48 	.word	0x08001b48

0800093c <GPIO_ToggleOutputPin>:

}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800093c:	b480      	push	{r7}
 800093e:	b083      	sub	sp, #12
 8000940:	af00      	add	r7, sp, #0
 8000942:	6078      	str	r0, [r7, #4]
 8000944:	460b      	mov	r3, r1
 8000946:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 8000948:	687b      	ldr	r3, [r7, #4]
 800094a:	695b      	ldr	r3, [r3, #20]
 800094c:	78fa      	ldrb	r2, [r7, #3]
 800094e:	2101      	movs	r1, #1
 8000950:	fa01 f202 	lsl.w	r2, r1, r2
 8000954:	405a      	eors	r2, r3
 8000956:	687b      	ldr	r3, [r7, #4]
 8000958:	615a      	str	r2, [r3, #20]

}
 800095a:	bf00      	nop
 800095c:	370c      	adds	r7, #12
 800095e:	46bd      	mov	sp, r7
 8000960:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000964:	4770      	bx	lr
	...

08000968 <GPIO_IRQInterruptConfig>:
/*
 * IRQ Configuration and ISR handling
 * please check ARM Cortex-M4 Manual -> 4.2 Nested Vectored Interrupt Controller for more details
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000968:	b480      	push	{r7}
 800096a:	b083      	sub	sp, #12
 800096c:	af00      	add	r7, sp, #0
 800096e:	4603      	mov	r3, r0
 8000970:	460a      	mov	r2, r1
 8000972:	71fb      	strb	r3, [r7, #7]
 8000974:	4613      	mov	r3, r2
 8000976:	71bb      	strb	r3, [r7, #6]

	if(EnorDi == ENABLE)
 8000978:	79bb      	ldrb	r3, [r7, #6]
 800097a:	2b01      	cmp	r3, #1
 800097c:	d133      	bne.n	80009e6 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <= 31)
 800097e:	79fb      	ldrb	r3, [r7, #7]
 8000980:	2b1f      	cmp	r3, #31
 8000982:	d80a      	bhi.n	800099a <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 8000984:	4b35      	ldr	r3, [pc, #212]	@ (8000a5c <GPIO_IRQInterruptConfig+0xf4>)
 8000986:	681b      	ldr	r3, [r3, #0]
 8000988:	79fa      	ldrb	r2, [r7, #7]
 800098a:	2101      	movs	r1, #1
 800098c:	fa01 f202 	lsl.w	r2, r1, r2
 8000990:	4611      	mov	r1, r2
 8000992:	4a32      	ldr	r2, [pc, #200]	@ (8000a5c <GPIO_IRQInterruptConfig+0xf4>)
 8000994:	430b      	orrs	r3, r1
 8000996:	6013      	str	r3, [r2, #0]
			//program ICER2 register
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}

}
 8000998:	e059      	b.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 ) //32 to 63
 800099a:	79fb      	ldrb	r3, [r7, #7]
 800099c:	2b1f      	cmp	r3, #31
 800099e:	d90f      	bls.n	80009c0 <GPIO_IRQInterruptConfig+0x58>
 80009a0:	79fb      	ldrb	r3, [r7, #7]
 80009a2:	2b3f      	cmp	r3, #63	@ 0x3f
 80009a4:	d80c      	bhi.n	80009c0 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 80009a6:	4b2e      	ldr	r3, [pc, #184]	@ (8000a60 <GPIO_IRQInterruptConfig+0xf8>)
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	79fa      	ldrb	r2, [r7, #7]
 80009ac:	f002 021f 	and.w	r2, r2, #31
 80009b0:	2101      	movs	r1, #1
 80009b2:	fa01 f202 	lsl.w	r2, r1, r2
 80009b6:	4611      	mov	r1, r2
 80009b8:	4a29      	ldr	r2, [pc, #164]	@ (8000a60 <GPIO_IRQInterruptConfig+0xf8>)
 80009ba:	430b      	orrs	r3, r1
 80009bc:	6013      	str	r3, [r2, #0]
 80009be:	e046      	b.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 80009c0:	79fb      	ldrb	r3, [r7, #7]
 80009c2:	2b3f      	cmp	r3, #63	@ 0x3f
 80009c4:	d943      	bls.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
 80009c6:	79fb      	ldrb	r3, [r7, #7]
 80009c8:	2b5f      	cmp	r3, #95	@ 0x5f
 80009ca:	d840      	bhi.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 80009cc:	4b25      	ldr	r3, [pc, #148]	@ (8000a64 <GPIO_IRQInterruptConfig+0xfc>)
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	79fa      	ldrb	r2, [r7, #7]
 80009d2:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80009d6:	2101      	movs	r1, #1
 80009d8:	fa01 f202 	lsl.w	r2, r1, r2
 80009dc:	4611      	mov	r1, r2
 80009de:	4a21      	ldr	r2, [pc, #132]	@ (8000a64 <GPIO_IRQInterruptConfig+0xfc>)
 80009e0:	430b      	orrs	r3, r1
 80009e2:	6013      	str	r3, [r2, #0]
}
 80009e4:	e033      	b.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <= 31)
 80009e6:	79fb      	ldrb	r3, [r7, #7]
 80009e8:	2b1f      	cmp	r3, #31
 80009ea:	d80a      	bhi.n	8000a02 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 80009ec:	4b1e      	ldr	r3, [pc, #120]	@ (8000a68 <GPIO_IRQInterruptConfig+0x100>)
 80009ee:	681b      	ldr	r3, [r3, #0]
 80009f0:	79fa      	ldrb	r2, [r7, #7]
 80009f2:	2101      	movs	r1, #1
 80009f4:	fa01 f202 	lsl.w	r2, r1, r2
 80009f8:	4611      	mov	r1, r2
 80009fa:	4a1b      	ldr	r2, [pc, #108]	@ (8000a68 <GPIO_IRQInterruptConfig+0x100>)
 80009fc:	430b      	orrs	r3, r1
 80009fe:	6013      	str	r3, [r2, #0]
}
 8000a00:	e025      	b.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
		}else if(IRQNumber > 31 && IRQNumber < 64 )
 8000a02:	79fb      	ldrb	r3, [r7, #7]
 8000a04:	2b1f      	cmp	r3, #31
 8000a06:	d90f      	bls.n	8000a28 <GPIO_IRQInterruptConfig+0xc0>
 8000a08:	79fb      	ldrb	r3, [r7, #7]
 8000a0a:	2b3f      	cmp	r3, #63	@ 0x3f
 8000a0c:	d80c      	bhi.n	8000a28 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 8000a0e:	4b17      	ldr	r3, [pc, #92]	@ (8000a6c <GPIO_IRQInterruptConfig+0x104>)
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	79fa      	ldrb	r2, [r7, #7]
 8000a14:	f002 021f 	and.w	r2, r2, #31
 8000a18:	2101      	movs	r1, #1
 8000a1a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a1e:	4611      	mov	r1, r2
 8000a20:	4a12      	ldr	r2, [pc, #72]	@ (8000a6c <GPIO_IRQInterruptConfig+0x104>)
 8000a22:	430b      	orrs	r3, r1
 8000a24:	6013      	str	r3, [r2, #0]
 8000a26:	e012      	b.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber < 96 )
 8000a28:	79fb      	ldrb	r3, [r7, #7]
 8000a2a:	2b3f      	cmp	r3, #63	@ 0x3f
 8000a2c:	d90f      	bls.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
 8000a2e:	79fb      	ldrb	r3, [r7, #7]
 8000a30:	2b5f      	cmp	r3, #95	@ 0x5f
 8000a32:	d80c      	bhi.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 8000a34:	4b0e      	ldr	r3, [pc, #56]	@ (8000a70 <GPIO_IRQInterruptConfig+0x108>)
 8000a36:	681b      	ldr	r3, [r3, #0]
 8000a38:	79fa      	ldrb	r2, [r7, #7]
 8000a3a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8000a3e:	2101      	movs	r1, #1
 8000a40:	fa01 f202 	lsl.w	r2, r1, r2
 8000a44:	4611      	mov	r1, r2
 8000a46:	4a0a      	ldr	r2, [pc, #40]	@ (8000a70 <GPIO_IRQInterruptConfig+0x108>)
 8000a48:	430b      	orrs	r3, r1
 8000a4a:	6013      	str	r3, [r2, #0]
}
 8000a4c:	e7ff      	b.n	8000a4e <GPIO_IRQInterruptConfig+0xe6>
 8000a4e:	bf00      	nop
 8000a50:	370c      	adds	r7, #12
 8000a52:	46bd      	mov	sp, r7
 8000a54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a58:	4770      	bx	lr
 8000a5a:	bf00      	nop
 8000a5c:	e000e100 	.word	0xe000e100
 8000a60:	e000e104 	.word	0xe000e104
 8000a64:	e000e108 	.word	0xe000e108
 8000a68:	e000e180 	.word	0xe000e180
 8000a6c:	e000e184 	.word	0xe000e184
 8000a70:	e000e188 	.word	0xe000e188

08000a74 <GPIO_IRQPriorityConfig>:


void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000a74:	b480      	push	{r7}
 8000a76:	b085      	sub	sp, #20
 8000a78:	af00      	add	r7, sp, #0
 8000a7a:	4603      	mov	r3, r0
 8000a7c:	6039      	str	r1, [r7, #0]
 8000a7e:	71fb      	strb	r3, [r7, #7]
    uint8_t temp1 = IRQNumber / 4;              // IPR register index
 8000a80:	79fb      	ldrb	r3, [r7, #7]
 8000a82:	089b      	lsrs	r3, r3, #2
 8000a84:	73fb      	strb	r3, [r7, #15]
    uint8_t temp2 = (IRQNumber % 4) * 8;        // Bit offset in IPR register
 8000a86:	79fb      	ldrb	r3, [r7, #7]
 8000a88:	f003 0303 	and.w	r3, r3, #3
 8000a8c:	b2db      	uxtb	r3, r3
 8000a8e:	00db      	lsls	r3, r3, #3
 8000a90:	73bb      	strb	r3, [r7, #14]

    // Clear existing priority bits (only top 4 bits are used)
    *(NVIC_PR_BASE_ADDR + temp1) &= ~(0xF << (temp2 + NO_PR_BITS_IMPLEMENTED));
 8000a92:	7bfb      	ldrb	r3, [r7, #15]
 8000a94:	009b      	lsls	r3, r3, #2
 8000a96:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000a9a:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000a9e:	681a      	ldr	r2, [r3, #0]
 8000aa0:	7bbb      	ldrb	r3, [r7, #14]
 8000aa2:	3304      	adds	r3, #4
 8000aa4:	210f      	movs	r1, #15
 8000aa6:	fa01 f303 	lsl.w	r3, r1, r3
 8000aaa:	43db      	mvns	r3, r3
 8000aac:	4619      	mov	r1, r3
 8000aae:	7bfb      	ldrb	r3, [r7, #15]
 8000ab0:	009b      	lsls	r3, r3, #2
 8000ab2:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000ab6:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000aba:	400a      	ands	r2, r1
 8000abc:	601a      	str	r2, [r3, #0]

    // Set new priority value in upper 4 bits
    *(NVIC_PR_BASE_ADDR + temp1) |=  (IRQPriority << (temp2 + NO_PR_BITS_IMPLEMENTED));
 8000abe:	7bfb      	ldrb	r3, [r7, #15]
 8000ac0:	009b      	lsls	r3, r3, #2
 8000ac2:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000ac6:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000aca:	6819      	ldr	r1, [r3, #0]
 8000acc:	7bbb      	ldrb	r3, [r7, #14]
 8000ace:	3304      	adds	r3, #4
 8000ad0:	683a      	ldr	r2, [r7, #0]
 8000ad2:	409a      	lsls	r2, r3
 8000ad4:	7bfb      	ldrb	r3, [r7, #15]
 8000ad6:	009b      	lsls	r3, r3, #2
 8000ad8:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000adc:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000ae0:	430a      	orrs	r2, r1
 8000ae2:	601a      	str	r2, [r3, #0]
}
 8000ae4:	bf00      	nop
 8000ae6:	3714      	adds	r7, #20
 8000ae8:	46bd      	mov	sp, r7
 8000aea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aee:	4770      	bx	lr

08000af0 <GPIO_IRQHandling>:


//PR is write to one (w1c) register
void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000af0:	b480      	push	{r7}
 8000af2:	b083      	sub	sp, #12
 8000af4:	af00      	add	r7, sp, #0
 8000af6:	4603      	mov	r3, r0
 8000af8:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if(EXTI->PR & ( 1 << PinNumber))
 8000afa:	4b0a      	ldr	r3, [pc, #40]	@ (8000b24 <GPIO_IRQHandling+0x34>)
 8000afc:	695b      	ldr	r3, [r3, #20]
 8000afe:	79fa      	ldrb	r2, [r7, #7]
 8000b00:	2101      	movs	r1, #1
 8000b02:	fa01 f202 	lsl.w	r2, r1, r2
 8000b06:	4013      	ands	r3, r2
 8000b08:	2b00      	cmp	r3, #0
 8000b0a:	d004      	beq.n	8000b16 <GPIO_IRQHandling+0x26>
	{
		//clear
		EXTI->PR = ( 1 << PinNumber);
 8000b0c:	79fb      	ldrb	r3, [r7, #7]
 8000b0e:	2201      	movs	r2, #1
 8000b10:	409a      	lsls	r2, r3
 8000b12:	4b04      	ldr	r3, [pc, #16]	@ (8000b24 <GPIO_IRQHandling+0x34>)
 8000b14:	615a      	str	r2, [r3, #20]
	}

}
 8000b16:	bf00      	nop
 8000b18:	370c      	adds	r7, #12
 8000b1a:	46bd      	mov	sp, r7
 8000b1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b20:	4770      	bx	lr
 8000b22:	bf00      	nop
 8000b24:	40013c00 	.word	0x40013c00

08000b28 <__assert_func>:
 8000b28:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000b2a:	4614      	mov	r4, r2
 8000b2c:	461a      	mov	r2, r3
 8000b2e:	4b09      	ldr	r3, [pc, #36]	@ (8000b54 <__assert_func+0x2c>)
 8000b30:	681b      	ldr	r3, [r3, #0]
 8000b32:	4605      	mov	r5, r0
 8000b34:	68d8      	ldr	r0, [r3, #12]
 8000b36:	b954      	cbnz	r4, 8000b4e <__assert_func+0x26>
 8000b38:	4b07      	ldr	r3, [pc, #28]	@ (8000b58 <__assert_func+0x30>)
 8000b3a:	461c      	mov	r4, r3
 8000b3c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8000b40:	9100      	str	r1, [sp, #0]
 8000b42:	462b      	mov	r3, r5
 8000b44:	4905      	ldr	r1, [pc, #20]	@ (8000b5c <__assert_func+0x34>)
 8000b46:	f000 f8b1 	bl	8000cac <fiprintf>
 8000b4a:	f000 f998 	bl	8000e7e <abort>
 8000b4e:	4b04      	ldr	r3, [pc, #16]	@ (8000b60 <__assert_func+0x38>)
 8000b50:	e7f4      	b.n	8000b3c <__assert_func+0x14>
 8000b52:	bf00      	nop
 8000b54:	2000000c 	.word	0x2000000c
 8000b58:	08001bc1 	.word	0x08001bc1
 8000b5c:	08001b93 	.word	0x08001b93
 8000b60:	08001b86 	.word	0x08001b86

08000b64 <std>:
 8000b64:	2300      	movs	r3, #0
 8000b66:	b510      	push	{r4, lr}
 8000b68:	4604      	mov	r4, r0
 8000b6a:	e9c0 3300 	strd	r3, r3, [r0]
 8000b6e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000b72:	6083      	str	r3, [r0, #8]
 8000b74:	8181      	strh	r1, [r0, #12]
 8000b76:	6643      	str	r3, [r0, #100]	@ 0x64
 8000b78:	81c2      	strh	r2, [r0, #14]
 8000b7a:	6183      	str	r3, [r0, #24]
 8000b7c:	4619      	mov	r1, r3
 8000b7e:	2208      	movs	r2, #8
 8000b80:	305c      	adds	r0, #92	@ 0x5c
 8000b82:	f000 f906 	bl	8000d92 <memset>
 8000b86:	4b0d      	ldr	r3, [pc, #52]	@ (8000bbc <std+0x58>)
 8000b88:	6263      	str	r3, [r4, #36]	@ 0x24
 8000b8a:	4b0d      	ldr	r3, [pc, #52]	@ (8000bc0 <std+0x5c>)
 8000b8c:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000b8e:	4b0d      	ldr	r3, [pc, #52]	@ (8000bc4 <std+0x60>)
 8000b90:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000b92:	4b0d      	ldr	r3, [pc, #52]	@ (8000bc8 <std+0x64>)
 8000b94:	6323      	str	r3, [r4, #48]	@ 0x30
 8000b96:	4b0d      	ldr	r3, [pc, #52]	@ (8000bcc <std+0x68>)
 8000b98:	6224      	str	r4, [r4, #32]
 8000b9a:	429c      	cmp	r4, r3
 8000b9c:	d006      	beq.n	8000bac <std+0x48>
 8000b9e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000ba2:	4294      	cmp	r4, r2
 8000ba4:	d002      	beq.n	8000bac <std+0x48>
 8000ba6:	33d0      	adds	r3, #208	@ 0xd0
 8000ba8:	429c      	cmp	r4, r3
 8000baa:	d105      	bne.n	8000bb8 <std+0x54>
 8000bac:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000bb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bb4:	f000 b960 	b.w	8000e78 <__retarget_lock_init_recursive>
 8000bb8:	bd10      	pop	{r4, pc}
 8000bba:	bf00      	nop
 8000bbc:	08000d0d 	.word	0x08000d0d
 8000bc0:	08000d2f 	.word	0x08000d2f
 8000bc4:	08000d67 	.word	0x08000d67
 8000bc8:	08000d8b 	.word	0x08000d8b
 8000bcc:	20000078 	.word	0x20000078

08000bd0 <stdio_exit_handler>:
 8000bd0:	4a02      	ldr	r2, [pc, #8]	@ (8000bdc <stdio_exit_handler+0xc>)
 8000bd2:	4903      	ldr	r1, [pc, #12]	@ (8000be0 <stdio_exit_handler+0x10>)
 8000bd4:	4803      	ldr	r0, [pc, #12]	@ (8000be4 <stdio_exit_handler+0x14>)
 8000bd6:	f000 b87b 	b.w	8000cd0 <_fwalk_sglue>
 8000bda:	bf00      	nop
 8000bdc:	20000000 	.word	0x20000000
 8000be0:	08001725 	.word	0x08001725
 8000be4:	20000010 	.word	0x20000010

08000be8 <cleanup_stdio>:
 8000be8:	6841      	ldr	r1, [r0, #4]
 8000bea:	4b0c      	ldr	r3, [pc, #48]	@ (8000c1c <cleanup_stdio+0x34>)
 8000bec:	4299      	cmp	r1, r3
 8000bee:	b510      	push	{r4, lr}
 8000bf0:	4604      	mov	r4, r0
 8000bf2:	d001      	beq.n	8000bf8 <cleanup_stdio+0x10>
 8000bf4:	f000 fd96 	bl	8001724 <_fflush_r>
 8000bf8:	68a1      	ldr	r1, [r4, #8]
 8000bfa:	4b09      	ldr	r3, [pc, #36]	@ (8000c20 <cleanup_stdio+0x38>)
 8000bfc:	4299      	cmp	r1, r3
 8000bfe:	d002      	beq.n	8000c06 <cleanup_stdio+0x1e>
 8000c00:	4620      	mov	r0, r4
 8000c02:	f000 fd8f 	bl	8001724 <_fflush_r>
 8000c06:	68e1      	ldr	r1, [r4, #12]
 8000c08:	4b06      	ldr	r3, [pc, #24]	@ (8000c24 <cleanup_stdio+0x3c>)
 8000c0a:	4299      	cmp	r1, r3
 8000c0c:	d004      	beq.n	8000c18 <cleanup_stdio+0x30>
 8000c0e:	4620      	mov	r0, r4
 8000c10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c14:	f000 bd86 	b.w	8001724 <_fflush_r>
 8000c18:	bd10      	pop	{r4, pc}
 8000c1a:	bf00      	nop
 8000c1c:	20000078 	.word	0x20000078
 8000c20:	200000e0 	.word	0x200000e0
 8000c24:	20000148 	.word	0x20000148

08000c28 <global_stdio_init.part.0>:
 8000c28:	b510      	push	{r4, lr}
 8000c2a:	4b0b      	ldr	r3, [pc, #44]	@ (8000c58 <global_stdio_init.part.0+0x30>)
 8000c2c:	4c0b      	ldr	r4, [pc, #44]	@ (8000c5c <global_stdio_init.part.0+0x34>)
 8000c2e:	4a0c      	ldr	r2, [pc, #48]	@ (8000c60 <global_stdio_init.part.0+0x38>)
 8000c30:	601a      	str	r2, [r3, #0]
 8000c32:	4620      	mov	r0, r4
 8000c34:	2200      	movs	r2, #0
 8000c36:	2104      	movs	r1, #4
 8000c38:	f7ff ff94 	bl	8000b64 <std>
 8000c3c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000c40:	2201      	movs	r2, #1
 8000c42:	2109      	movs	r1, #9
 8000c44:	f7ff ff8e 	bl	8000b64 <std>
 8000c48:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000c4c:	2202      	movs	r2, #2
 8000c4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c52:	2112      	movs	r1, #18
 8000c54:	f7ff bf86 	b.w	8000b64 <std>
 8000c58:	200001b0 	.word	0x200001b0
 8000c5c:	20000078 	.word	0x20000078
 8000c60:	08000bd1 	.word	0x08000bd1

08000c64 <__sfp_lock_acquire>:
 8000c64:	4801      	ldr	r0, [pc, #4]	@ (8000c6c <__sfp_lock_acquire+0x8>)
 8000c66:	f000 b908 	b.w	8000e7a <__retarget_lock_acquire_recursive>
 8000c6a:	bf00      	nop
 8000c6c:	200001b9 	.word	0x200001b9

08000c70 <__sfp_lock_release>:
 8000c70:	4801      	ldr	r0, [pc, #4]	@ (8000c78 <__sfp_lock_release+0x8>)
 8000c72:	f000 b903 	b.w	8000e7c <__retarget_lock_release_recursive>
 8000c76:	bf00      	nop
 8000c78:	200001b9 	.word	0x200001b9

08000c7c <__sinit>:
 8000c7c:	b510      	push	{r4, lr}
 8000c7e:	4604      	mov	r4, r0
 8000c80:	f7ff fff0 	bl	8000c64 <__sfp_lock_acquire>
 8000c84:	6a23      	ldr	r3, [r4, #32]
 8000c86:	b11b      	cbz	r3, 8000c90 <__sinit+0x14>
 8000c88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c8c:	f7ff bff0 	b.w	8000c70 <__sfp_lock_release>
 8000c90:	4b04      	ldr	r3, [pc, #16]	@ (8000ca4 <__sinit+0x28>)
 8000c92:	6223      	str	r3, [r4, #32]
 8000c94:	4b04      	ldr	r3, [pc, #16]	@ (8000ca8 <__sinit+0x2c>)
 8000c96:	681b      	ldr	r3, [r3, #0]
 8000c98:	2b00      	cmp	r3, #0
 8000c9a:	d1f5      	bne.n	8000c88 <__sinit+0xc>
 8000c9c:	f7ff ffc4 	bl	8000c28 <global_stdio_init.part.0>
 8000ca0:	e7f2      	b.n	8000c88 <__sinit+0xc>
 8000ca2:	bf00      	nop
 8000ca4:	08000be9 	.word	0x08000be9
 8000ca8:	200001b0 	.word	0x200001b0

08000cac <fiprintf>:
 8000cac:	b40e      	push	{r1, r2, r3}
 8000cae:	b503      	push	{r0, r1, lr}
 8000cb0:	4601      	mov	r1, r0
 8000cb2:	ab03      	add	r3, sp, #12
 8000cb4:	4805      	ldr	r0, [pc, #20]	@ (8000ccc <fiprintf+0x20>)
 8000cb6:	f853 2b04 	ldr.w	r2, [r3], #4
 8000cba:	6800      	ldr	r0, [r0, #0]
 8000cbc:	9301      	str	r3, [sp, #4]
 8000cbe:	f000 fa07 	bl	80010d0 <_vfiprintf_r>
 8000cc2:	b002      	add	sp, #8
 8000cc4:	f85d eb04 	ldr.w	lr, [sp], #4
 8000cc8:	b003      	add	sp, #12
 8000cca:	4770      	bx	lr
 8000ccc:	2000000c 	.word	0x2000000c

08000cd0 <_fwalk_sglue>:
 8000cd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000cd4:	4607      	mov	r7, r0
 8000cd6:	4688      	mov	r8, r1
 8000cd8:	4614      	mov	r4, r2
 8000cda:	2600      	movs	r6, #0
 8000cdc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000ce0:	f1b9 0901 	subs.w	r9, r9, #1
 8000ce4:	d505      	bpl.n	8000cf2 <_fwalk_sglue+0x22>
 8000ce6:	6824      	ldr	r4, [r4, #0]
 8000ce8:	2c00      	cmp	r4, #0
 8000cea:	d1f7      	bne.n	8000cdc <_fwalk_sglue+0xc>
 8000cec:	4630      	mov	r0, r6
 8000cee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000cf2:	89ab      	ldrh	r3, [r5, #12]
 8000cf4:	2b01      	cmp	r3, #1
 8000cf6:	d907      	bls.n	8000d08 <_fwalk_sglue+0x38>
 8000cf8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000cfc:	3301      	adds	r3, #1
 8000cfe:	d003      	beq.n	8000d08 <_fwalk_sglue+0x38>
 8000d00:	4629      	mov	r1, r5
 8000d02:	4638      	mov	r0, r7
 8000d04:	47c0      	blx	r8
 8000d06:	4306      	orrs	r6, r0
 8000d08:	3568      	adds	r5, #104	@ 0x68
 8000d0a:	e7e9      	b.n	8000ce0 <_fwalk_sglue+0x10>

08000d0c <__sread>:
 8000d0c:	b510      	push	{r4, lr}
 8000d0e:	460c      	mov	r4, r1
 8000d10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d14:	f000 f868 	bl	8000de8 <_read_r>
 8000d18:	2800      	cmp	r0, #0
 8000d1a:	bfab      	itete	ge
 8000d1c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000d1e:	89a3      	ldrhlt	r3, [r4, #12]
 8000d20:	181b      	addge	r3, r3, r0
 8000d22:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000d26:	bfac      	ite	ge
 8000d28:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000d2a:	81a3      	strhlt	r3, [r4, #12]
 8000d2c:	bd10      	pop	{r4, pc}

08000d2e <__swrite>:
 8000d2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d32:	461f      	mov	r7, r3
 8000d34:	898b      	ldrh	r3, [r1, #12]
 8000d36:	05db      	lsls	r3, r3, #23
 8000d38:	4605      	mov	r5, r0
 8000d3a:	460c      	mov	r4, r1
 8000d3c:	4616      	mov	r6, r2
 8000d3e:	d505      	bpl.n	8000d4c <__swrite+0x1e>
 8000d40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d44:	2302      	movs	r3, #2
 8000d46:	2200      	movs	r2, #0
 8000d48:	f000 f83c 	bl	8000dc4 <_lseek_r>
 8000d4c:	89a3      	ldrh	r3, [r4, #12]
 8000d4e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d52:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000d56:	81a3      	strh	r3, [r4, #12]
 8000d58:	4632      	mov	r2, r6
 8000d5a:	463b      	mov	r3, r7
 8000d5c:	4628      	mov	r0, r5
 8000d5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000d62:	f000 b853 	b.w	8000e0c <_write_r>

08000d66 <__sseek>:
 8000d66:	b510      	push	{r4, lr}
 8000d68:	460c      	mov	r4, r1
 8000d6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d6e:	f000 f829 	bl	8000dc4 <_lseek_r>
 8000d72:	1c43      	adds	r3, r0, #1
 8000d74:	89a3      	ldrh	r3, [r4, #12]
 8000d76:	bf15      	itete	ne
 8000d78:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000d7a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000d7e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000d82:	81a3      	strheq	r3, [r4, #12]
 8000d84:	bf18      	it	ne
 8000d86:	81a3      	strhne	r3, [r4, #12]
 8000d88:	bd10      	pop	{r4, pc}

08000d8a <__sclose>:
 8000d8a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d8e:	f000 b809 	b.w	8000da4 <_close_r>

08000d92 <memset>:
 8000d92:	4402      	add	r2, r0
 8000d94:	4603      	mov	r3, r0
 8000d96:	4293      	cmp	r3, r2
 8000d98:	d100      	bne.n	8000d9c <memset+0xa>
 8000d9a:	4770      	bx	lr
 8000d9c:	f803 1b01 	strb.w	r1, [r3], #1
 8000da0:	e7f9      	b.n	8000d96 <memset+0x4>
	...

08000da4 <_close_r>:
 8000da4:	b538      	push	{r3, r4, r5, lr}
 8000da6:	4d06      	ldr	r5, [pc, #24]	@ (8000dc0 <_close_r+0x1c>)
 8000da8:	2300      	movs	r3, #0
 8000daa:	4604      	mov	r4, r0
 8000dac:	4608      	mov	r0, r1
 8000dae:	602b      	str	r3, [r5, #0]
 8000db0:	f000 fe4c 	bl	8001a4c <_close>
 8000db4:	1c43      	adds	r3, r0, #1
 8000db6:	d102      	bne.n	8000dbe <_close_r+0x1a>
 8000db8:	682b      	ldr	r3, [r5, #0]
 8000dba:	b103      	cbz	r3, 8000dbe <_close_r+0x1a>
 8000dbc:	6023      	str	r3, [r4, #0]
 8000dbe:	bd38      	pop	{r3, r4, r5, pc}
 8000dc0:	200001b4 	.word	0x200001b4

08000dc4 <_lseek_r>:
 8000dc4:	b538      	push	{r3, r4, r5, lr}
 8000dc6:	4d07      	ldr	r5, [pc, #28]	@ (8000de4 <_lseek_r+0x20>)
 8000dc8:	4604      	mov	r4, r0
 8000dca:	4608      	mov	r0, r1
 8000dcc:	4611      	mov	r1, r2
 8000dce:	2200      	movs	r2, #0
 8000dd0:	602a      	str	r2, [r5, #0]
 8000dd2:	461a      	mov	r2, r3
 8000dd4:	f000 fe62 	bl	8001a9c <_lseek>
 8000dd8:	1c43      	adds	r3, r0, #1
 8000dda:	d102      	bne.n	8000de2 <_lseek_r+0x1e>
 8000ddc:	682b      	ldr	r3, [r5, #0]
 8000dde:	b103      	cbz	r3, 8000de2 <_lseek_r+0x1e>
 8000de0:	6023      	str	r3, [r4, #0]
 8000de2:	bd38      	pop	{r3, r4, r5, pc}
 8000de4:	200001b4 	.word	0x200001b4

08000de8 <_read_r>:
 8000de8:	b538      	push	{r3, r4, r5, lr}
 8000dea:	4d07      	ldr	r5, [pc, #28]	@ (8000e08 <_read_r+0x20>)
 8000dec:	4604      	mov	r4, r0
 8000dee:	4608      	mov	r0, r1
 8000df0:	4611      	mov	r1, r2
 8000df2:	2200      	movs	r2, #0
 8000df4:	602a      	str	r2, [r5, #0]
 8000df6:	461a      	mov	r2, r3
 8000df8:	f000 fe58 	bl	8001aac <_read>
 8000dfc:	1c43      	adds	r3, r0, #1
 8000dfe:	d102      	bne.n	8000e06 <_read_r+0x1e>
 8000e00:	682b      	ldr	r3, [r5, #0]
 8000e02:	b103      	cbz	r3, 8000e06 <_read_r+0x1e>
 8000e04:	6023      	str	r3, [r4, #0]
 8000e06:	bd38      	pop	{r3, r4, r5, pc}
 8000e08:	200001b4 	.word	0x200001b4

08000e0c <_write_r>:
 8000e0c:	b538      	push	{r3, r4, r5, lr}
 8000e0e:	4d07      	ldr	r5, [pc, #28]	@ (8000e2c <_write_r+0x20>)
 8000e10:	4604      	mov	r4, r0
 8000e12:	4608      	mov	r0, r1
 8000e14:	4611      	mov	r1, r2
 8000e16:	2200      	movs	r2, #0
 8000e18:	602a      	str	r2, [r5, #0]
 8000e1a:	461a      	mov	r2, r3
 8000e1c:	f000 fe5c 	bl	8001ad8 <_write>
 8000e20:	1c43      	adds	r3, r0, #1
 8000e22:	d102      	bne.n	8000e2a <_write_r+0x1e>
 8000e24:	682b      	ldr	r3, [r5, #0]
 8000e26:	b103      	cbz	r3, 8000e2a <_write_r+0x1e>
 8000e28:	6023      	str	r3, [r4, #0]
 8000e2a:	bd38      	pop	{r3, r4, r5, pc}
 8000e2c:	200001b4 	.word	0x200001b4

08000e30 <__libc_init_array>:
 8000e30:	b570      	push	{r4, r5, r6, lr}
 8000e32:	4d0d      	ldr	r5, [pc, #52]	@ (8000e68 <__libc_init_array+0x38>)
 8000e34:	4c0d      	ldr	r4, [pc, #52]	@ (8000e6c <__libc_init_array+0x3c>)
 8000e36:	1b64      	subs	r4, r4, r5
 8000e38:	10a4      	asrs	r4, r4, #2
 8000e3a:	2600      	movs	r6, #0
 8000e3c:	42a6      	cmp	r6, r4
 8000e3e:	d109      	bne.n	8000e54 <__libc_init_array+0x24>
 8000e40:	4d0b      	ldr	r5, [pc, #44]	@ (8000e70 <__libc_init_array+0x40>)
 8000e42:	4c0c      	ldr	r4, [pc, #48]	@ (8000e74 <__libc_init_array+0x44>)
 8000e44:	f000 fe52 	bl	8001aec <_init>
 8000e48:	1b64      	subs	r4, r4, r5
 8000e4a:	10a4      	asrs	r4, r4, #2
 8000e4c:	2600      	movs	r6, #0
 8000e4e:	42a6      	cmp	r6, r4
 8000e50:	d105      	bne.n	8000e5e <__libc_init_array+0x2e>
 8000e52:	bd70      	pop	{r4, r5, r6, pc}
 8000e54:	f855 3b04 	ldr.w	r3, [r5], #4
 8000e58:	4798      	blx	r3
 8000e5a:	3601      	adds	r6, #1
 8000e5c:	e7ee      	b.n	8000e3c <__libc_init_array+0xc>
 8000e5e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000e62:	4798      	blx	r3
 8000e64:	3601      	adds	r6, #1
 8000e66:	e7f2      	b.n	8000e4e <__libc_init_array+0x1e>
 8000e68:	08001c00 	.word	0x08001c00
 8000e6c:	08001c00 	.word	0x08001c00
 8000e70:	08001c00 	.word	0x08001c00
 8000e74:	08001c04 	.word	0x08001c04

08000e78 <__retarget_lock_init_recursive>:
 8000e78:	4770      	bx	lr

08000e7a <__retarget_lock_acquire_recursive>:
 8000e7a:	4770      	bx	lr

08000e7c <__retarget_lock_release_recursive>:
 8000e7c:	4770      	bx	lr

08000e7e <abort>:
 8000e7e:	b508      	push	{r3, lr}
 8000e80:	2006      	movs	r0, #6
 8000e82:	f000 fd33 	bl	80018ec <raise>
 8000e86:	2001      	movs	r0, #1
 8000e88:	f000 fe2e 	bl	8001ae8 <_exit>

08000e8c <_free_r>:
 8000e8c:	b538      	push	{r3, r4, r5, lr}
 8000e8e:	4605      	mov	r5, r0
 8000e90:	2900      	cmp	r1, #0
 8000e92:	d041      	beq.n	8000f18 <_free_r+0x8c>
 8000e94:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000e98:	1f0c      	subs	r4, r1, #4
 8000e9a:	2b00      	cmp	r3, #0
 8000e9c:	bfb8      	it	lt
 8000e9e:	18e4      	addlt	r4, r4, r3
 8000ea0:	f000 f8e0 	bl	8001064 <__malloc_lock>
 8000ea4:	4a1d      	ldr	r2, [pc, #116]	@ (8000f1c <_free_r+0x90>)
 8000ea6:	6813      	ldr	r3, [r2, #0]
 8000ea8:	b933      	cbnz	r3, 8000eb8 <_free_r+0x2c>
 8000eaa:	6063      	str	r3, [r4, #4]
 8000eac:	6014      	str	r4, [r2, #0]
 8000eae:	4628      	mov	r0, r5
 8000eb0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000eb4:	f000 b8dc 	b.w	8001070 <__malloc_unlock>
 8000eb8:	42a3      	cmp	r3, r4
 8000eba:	d908      	bls.n	8000ece <_free_r+0x42>
 8000ebc:	6820      	ldr	r0, [r4, #0]
 8000ebe:	1821      	adds	r1, r4, r0
 8000ec0:	428b      	cmp	r3, r1
 8000ec2:	bf01      	itttt	eq
 8000ec4:	6819      	ldreq	r1, [r3, #0]
 8000ec6:	685b      	ldreq	r3, [r3, #4]
 8000ec8:	1809      	addeq	r1, r1, r0
 8000eca:	6021      	streq	r1, [r4, #0]
 8000ecc:	e7ed      	b.n	8000eaa <_free_r+0x1e>
 8000ece:	461a      	mov	r2, r3
 8000ed0:	685b      	ldr	r3, [r3, #4]
 8000ed2:	b10b      	cbz	r3, 8000ed8 <_free_r+0x4c>
 8000ed4:	42a3      	cmp	r3, r4
 8000ed6:	d9fa      	bls.n	8000ece <_free_r+0x42>
 8000ed8:	6811      	ldr	r1, [r2, #0]
 8000eda:	1850      	adds	r0, r2, r1
 8000edc:	42a0      	cmp	r0, r4
 8000ede:	d10b      	bne.n	8000ef8 <_free_r+0x6c>
 8000ee0:	6820      	ldr	r0, [r4, #0]
 8000ee2:	4401      	add	r1, r0
 8000ee4:	1850      	adds	r0, r2, r1
 8000ee6:	4283      	cmp	r3, r0
 8000ee8:	6011      	str	r1, [r2, #0]
 8000eea:	d1e0      	bne.n	8000eae <_free_r+0x22>
 8000eec:	6818      	ldr	r0, [r3, #0]
 8000eee:	685b      	ldr	r3, [r3, #4]
 8000ef0:	6053      	str	r3, [r2, #4]
 8000ef2:	4408      	add	r0, r1
 8000ef4:	6010      	str	r0, [r2, #0]
 8000ef6:	e7da      	b.n	8000eae <_free_r+0x22>
 8000ef8:	d902      	bls.n	8000f00 <_free_r+0x74>
 8000efa:	230c      	movs	r3, #12
 8000efc:	602b      	str	r3, [r5, #0]
 8000efe:	e7d6      	b.n	8000eae <_free_r+0x22>
 8000f00:	6820      	ldr	r0, [r4, #0]
 8000f02:	1821      	adds	r1, r4, r0
 8000f04:	428b      	cmp	r3, r1
 8000f06:	bf04      	itt	eq
 8000f08:	6819      	ldreq	r1, [r3, #0]
 8000f0a:	685b      	ldreq	r3, [r3, #4]
 8000f0c:	6063      	str	r3, [r4, #4]
 8000f0e:	bf04      	itt	eq
 8000f10:	1809      	addeq	r1, r1, r0
 8000f12:	6021      	streq	r1, [r4, #0]
 8000f14:	6054      	str	r4, [r2, #4]
 8000f16:	e7ca      	b.n	8000eae <_free_r+0x22>
 8000f18:	bd38      	pop	{r3, r4, r5, pc}
 8000f1a:	bf00      	nop
 8000f1c:	200001c0 	.word	0x200001c0

08000f20 <sbrk_aligned>:
 8000f20:	b570      	push	{r4, r5, r6, lr}
 8000f22:	4e0f      	ldr	r6, [pc, #60]	@ (8000f60 <sbrk_aligned+0x40>)
 8000f24:	460c      	mov	r4, r1
 8000f26:	6831      	ldr	r1, [r6, #0]
 8000f28:	4605      	mov	r5, r0
 8000f2a:	b911      	cbnz	r1, 8000f32 <sbrk_aligned+0x12>
 8000f2c:	f000 fcfa 	bl	8001924 <_sbrk_r>
 8000f30:	6030      	str	r0, [r6, #0]
 8000f32:	4621      	mov	r1, r4
 8000f34:	4628      	mov	r0, r5
 8000f36:	f000 fcf5 	bl	8001924 <_sbrk_r>
 8000f3a:	1c43      	adds	r3, r0, #1
 8000f3c:	d103      	bne.n	8000f46 <sbrk_aligned+0x26>
 8000f3e:	f04f 34ff 	mov.w	r4, #4294967295
 8000f42:	4620      	mov	r0, r4
 8000f44:	bd70      	pop	{r4, r5, r6, pc}
 8000f46:	1cc4      	adds	r4, r0, #3
 8000f48:	f024 0403 	bic.w	r4, r4, #3
 8000f4c:	42a0      	cmp	r0, r4
 8000f4e:	d0f8      	beq.n	8000f42 <sbrk_aligned+0x22>
 8000f50:	1a21      	subs	r1, r4, r0
 8000f52:	4628      	mov	r0, r5
 8000f54:	f000 fce6 	bl	8001924 <_sbrk_r>
 8000f58:	3001      	adds	r0, #1
 8000f5a:	d1f2      	bne.n	8000f42 <sbrk_aligned+0x22>
 8000f5c:	e7ef      	b.n	8000f3e <sbrk_aligned+0x1e>
 8000f5e:	bf00      	nop
 8000f60:	200001bc 	.word	0x200001bc

08000f64 <_malloc_r>:
 8000f64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000f68:	1ccd      	adds	r5, r1, #3
 8000f6a:	f025 0503 	bic.w	r5, r5, #3
 8000f6e:	3508      	adds	r5, #8
 8000f70:	2d0c      	cmp	r5, #12
 8000f72:	bf38      	it	cc
 8000f74:	250c      	movcc	r5, #12
 8000f76:	2d00      	cmp	r5, #0
 8000f78:	4606      	mov	r6, r0
 8000f7a:	db01      	blt.n	8000f80 <_malloc_r+0x1c>
 8000f7c:	42a9      	cmp	r1, r5
 8000f7e:	d904      	bls.n	8000f8a <_malloc_r+0x26>
 8000f80:	230c      	movs	r3, #12
 8000f82:	6033      	str	r3, [r6, #0]
 8000f84:	2000      	movs	r0, #0
 8000f86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000f8a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8001060 <_malloc_r+0xfc>
 8000f8e:	f000 f869 	bl	8001064 <__malloc_lock>
 8000f92:	f8d8 3000 	ldr.w	r3, [r8]
 8000f96:	461c      	mov	r4, r3
 8000f98:	bb44      	cbnz	r4, 8000fec <_malloc_r+0x88>
 8000f9a:	4629      	mov	r1, r5
 8000f9c:	4630      	mov	r0, r6
 8000f9e:	f7ff ffbf 	bl	8000f20 <sbrk_aligned>
 8000fa2:	1c43      	adds	r3, r0, #1
 8000fa4:	4604      	mov	r4, r0
 8000fa6:	d158      	bne.n	800105a <_malloc_r+0xf6>
 8000fa8:	f8d8 4000 	ldr.w	r4, [r8]
 8000fac:	4627      	mov	r7, r4
 8000fae:	2f00      	cmp	r7, #0
 8000fb0:	d143      	bne.n	800103a <_malloc_r+0xd6>
 8000fb2:	2c00      	cmp	r4, #0
 8000fb4:	d04b      	beq.n	800104e <_malloc_r+0xea>
 8000fb6:	6823      	ldr	r3, [r4, #0]
 8000fb8:	4639      	mov	r1, r7
 8000fba:	4630      	mov	r0, r6
 8000fbc:	eb04 0903 	add.w	r9, r4, r3
 8000fc0:	f000 fcb0 	bl	8001924 <_sbrk_r>
 8000fc4:	4581      	cmp	r9, r0
 8000fc6:	d142      	bne.n	800104e <_malloc_r+0xea>
 8000fc8:	6821      	ldr	r1, [r4, #0]
 8000fca:	1a6d      	subs	r5, r5, r1
 8000fcc:	4629      	mov	r1, r5
 8000fce:	4630      	mov	r0, r6
 8000fd0:	f7ff ffa6 	bl	8000f20 <sbrk_aligned>
 8000fd4:	3001      	adds	r0, #1
 8000fd6:	d03a      	beq.n	800104e <_malloc_r+0xea>
 8000fd8:	6823      	ldr	r3, [r4, #0]
 8000fda:	442b      	add	r3, r5
 8000fdc:	6023      	str	r3, [r4, #0]
 8000fde:	f8d8 3000 	ldr.w	r3, [r8]
 8000fe2:	685a      	ldr	r2, [r3, #4]
 8000fe4:	bb62      	cbnz	r2, 8001040 <_malloc_r+0xdc>
 8000fe6:	f8c8 7000 	str.w	r7, [r8]
 8000fea:	e00f      	b.n	800100c <_malloc_r+0xa8>
 8000fec:	6822      	ldr	r2, [r4, #0]
 8000fee:	1b52      	subs	r2, r2, r5
 8000ff0:	d420      	bmi.n	8001034 <_malloc_r+0xd0>
 8000ff2:	2a0b      	cmp	r2, #11
 8000ff4:	d917      	bls.n	8001026 <_malloc_r+0xc2>
 8000ff6:	1961      	adds	r1, r4, r5
 8000ff8:	42a3      	cmp	r3, r4
 8000ffa:	6025      	str	r5, [r4, #0]
 8000ffc:	bf18      	it	ne
 8000ffe:	6059      	strne	r1, [r3, #4]
 8001000:	6863      	ldr	r3, [r4, #4]
 8001002:	bf08      	it	eq
 8001004:	f8c8 1000 	streq.w	r1, [r8]
 8001008:	5162      	str	r2, [r4, r5]
 800100a:	604b      	str	r3, [r1, #4]
 800100c:	4630      	mov	r0, r6
 800100e:	f000 f82f 	bl	8001070 <__malloc_unlock>
 8001012:	f104 000b 	add.w	r0, r4, #11
 8001016:	1d23      	adds	r3, r4, #4
 8001018:	f020 0007 	bic.w	r0, r0, #7
 800101c:	1ac2      	subs	r2, r0, r3
 800101e:	bf1c      	itt	ne
 8001020:	1a1b      	subne	r3, r3, r0
 8001022:	50a3      	strne	r3, [r4, r2]
 8001024:	e7af      	b.n	8000f86 <_malloc_r+0x22>
 8001026:	6862      	ldr	r2, [r4, #4]
 8001028:	42a3      	cmp	r3, r4
 800102a:	bf0c      	ite	eq
 800102c:	f8c8 2000 	streq.w	r2, [r8]
 8001030:	605a      	strne	r2, [r3, #4]
 8001032:	e7eb      	b.n	800100c <_malloc_r+0xa8>
 8001034:	4623      	mov	r3, r4
 8001036:	6864      	ldr	r4, [r4, #4]
 8001038:	e7ae      	b.n	8000f98 <_malloc_r+0x34>
 800103a:	463c      	mov	r4, r7
 800103c:	687f      	ldr	r7, [r7, #4]
 800103e:	e7b6      	b.n	8000fae <_malloc_r+0x4a>
 8001040:	461a      	mov	r2, r3
 8001042:	685b      	ldr	r3, [r3, #4]
 8001044:	42a3      	cmp	r3, r4
 8001046:	d1fb      	bne.n	8001040 <_malloc_r+0xdc>
 8001048:	2300      	movs	r3, #0
 800104a:	6053      	str	r3, [r2, #4]
 800104c:	e7de      	b.n	800100c <_malloc_r+0xa8>
 800104e:	230c      	movs	r3, #12
 8001050:	6033      	str	r3, [r6, #0]
 8001052:	4630      	mov	r0, r6
 8001054:	f000 f80c 	bl	8001070 <__malloc_unlock>
 8001058:	e794      	b.n	8000f84 <_malloc_r+0x20>
 800105a:	6005      	str	r5, [r0, #0]
 800105c:	e7d6      	b.n	800100c <_malloc_r+0xa8>
 800105e:	bf00      	nop
 8001060:	200001c0 	.word	0x200001c0

08001064 <__malloc_lock>:
 8001064:	4801      	ldr	r0, [pc, #4]	@ (800106c <__malloc_lock+0x8>)
 8001066:	f7ff bf08 	b.w	8000e7a <__retarget_lock_acquire_recursive>
 800106a:	bf00      	nop
 800106c:	200001b8 	.word	0x200001b8

08001070 <__malloc_unlock>:
 8001070:	4801      	ldr	r0, [pc, #4]	@ (8001078 <__malloc_unlock+0x8>)
 8001072:	f7ff bf03 	b.w	8000e7c <__retarget_lock_release_recursive>
 8001076:	bf00      	nop
 8001078:	200001b8 	.word	0x200001b8

0800107c <__sfputc_r>:
 800107c:	6893      	ldr	r3, [r2, #8]
 800107e:	3b01      	subs	r3, #1
 8001080:	2b00      	cmp	r3, #0
 8001082:	b410      	push	{r4}
 8001084:	6093      	str	r3, [r2, #8]
 8001086:	da08      	bge.n	800109a <__sfputc_r+0x1e>
 8001088:	6994      	ldr	r4, [r2, #24]
 800108a:	42a3      	cmp	r3, r4
 800108c:	db01      	blt.n	8001092 <__sfputc_r+0x16>
 800108e:	290a      	cmp	r1, #10
 8001090:	d103      	bne.n	800109a <__sfputc_r+0x1e>
 8001092:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001096:	f000 bb6d 	b.w	8001774 <__swbuf_r>
 800109a:	6813      	ldr	r3, [r2, #0]
 800109c:	1c58      	adds	r0, r3, #1
 800109e:	6010      	str	r0, [r2, #0]
 80010a0:	7019      	strb	r1, [r3, #0]
 80010a2:	4608      	mov	r0, r1
 80010a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80010a8:	4770      	bx	lr

080010aa <__sfputs_r>:
 80010aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010ac:	4606      	mov	r6, r0
 80010ae:	460f      	mov	r7, r1
 80010b0:	4614      	mov	r4, r2
 80010b2:	18d5      	adds	r5, r2, r3
 80010b4:	42ac      	cmp	r4, r5
 80010b6:	d101      	bne.n	80010bc <__sfputs_r+0x12>
 80010b8:	2000      	movs	r0, #0
 80010ba:	e007      	b.n	80010cc <__sfputs_r+0x22>
 80010bc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80010c0:	463a      	mov	r2, r7
 80010c2:	4630      	mov	r0, r6
 80010c4:	f7ff ffda 	bl	800107c <__sfputc_r>
 80010c8:	1c43      	adds	r3, r0, #1
 80010ca:	d1f3      	bne.n	80010b4 <__sfputs_r+0xa>
 80010cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080010d0 <_vfiprintf_r>:
 80010d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80010d4:	460d      	mov	r5, r1
 80010d6:	b09d      	sub	sp, #116	@ 0x74
 80010d8:	4614      	mov	r4, r2
 80010da:	4698      	mov	r8, r3
 80010dc:	4606      	mov	r6, r0
 80010de:	b118      	cbz	r0, 80010e8 <_vfiprintf_r+0x18>
 80010e0:	6a03      	ldr	r3, [r0, #32]
 80010e2:	b90b      	cbnz	r3, 80010e8 <_vfiprintf_r+0x18>
 80010e4:	f7ff fdca 	bl	8000c7c <__sinit>
 80010e8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80010ea:	07d9      	lsls	r1, r3, #31
 80010ec:	d405      	bmi.n	80010fa <_vfiprintf_r+0x2a>
 80010ee:	89ab      	ldrh	r3, [r5, #12]
 80010f0:	059a      	lsls	r2, r3, #22
 80010f2:	d402      	bmi.n	80010fa <_vfiprintf_r+0x2a>
 80010f4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80010f6:	f7ff fec0 	bl	8000e7a <__retarget_lock_acquire_recursive>
 80010fa:	89ab      	ldrh	r3, [r5, #12]
 80010fc:	071b      	lsls	r3, r3, #28
 80010fe:	d501      	bpl.n	8001104 <_vfiprintf_r+0x34>
 8001100:	692b      	ldr	r3, [r5, #16]
 8001102:	b99b      	cbnz	r3, 800112c <_vfiprintf_r+0x5c>
 8001104:	4629      	mov	r1, r5
 8001106:	4630      	mov	r0, r6
 8001108:	f000 fb72 	bl	80017f0 <__swsetup_r>
 800110c:	b170      	cbz	r0, 800112c <_vfiprintf_r+0x5c>
 800110e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8001110:	07dc      	lsls	r4, r3, #31
 8001112:	d504      	bpl.n	800111e <_vfiprintf_r+0x4e>
 8001114:	f04f 30ff 	mov.w	r0, #4294967295
 8001118:	b01d      	add	sp, #116	@ 0x74
 800111a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800111e:	89ab      	ldrh	r3, [r5, #12]
 8001120:	0598      	lsls	r0, r3, #22
 8001122:	d4f7      	bmi.n	8001114 <_vfiprintf_r+0x44>
 8001124:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8001126:	f7ff fea9 	bl	8000e7c <__retarget_lock_release_recursive>
 800112a:	e7f3      	b.n	8001114 <_vfiprintf_r+0x44>
 800112c:	2300      	movs	r3, #0
 800112e:	9309      	str	r3, [sp, #36]	@ 0x24
 8001130:	2320      	movs	r3, #32
 8001132:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8001136:	f8cd 800c 	str.w	r8, [sp, #12]
 800113a:	2330      	movs	r3, #48	@ 0x30
 800113c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80012ec <_vfiprintf_r+0x21c>
 8001140:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8001144:	f04f 0901 	mov.w	r9, #1
 8001148:	4623      	mov	r3, r4
 800114a:	469a      	mov	sl, r3
 800114c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001150:	b10a      	cbz	r2, 8001156 <_vfiprintf_r+0x86>
 8001152:	2a25      	cmp	r2, #37	@ 0x25
 8001154:	d1f9      	bne.n	800114a <_vfiprintf_r+0x7a>
 8001156:	ebba 0b04 	subs.w	fp, sl, r4
 800115a:	d00b      	beq.n	8001174 <_vfiprintf_r+0xa4>
 800115c:	465b      	mov	r3, fp
 800115e:	4622      	mov	r2, r4
 8001160:	4629      	mov	r1, r5
 8001162:	4630      	mov	r0, r6
 8001164:	f7ff ffa1 	bl	80010aa <__sfputs_r>
 8001168:	3001      	adds	r0, #1
 800116a:	f000 80a7 	beq.w	80012bc <_vfiprintf_r+0x1ec>
 800116e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8001170:	445a      	add	r2, fp
 8001172:	9209      	str	r2, [sp, #36]	@ 0x24
 8001174:	f89a 3000 	ldrb.w	r3, [sl]
 8001178:	2b00      	cmp	r3, #0
 800117a:	f000 809f 	beq.w	80012bc <_vfiprintf_r+0x1ec>
 800117e:	2300      	movs	r3, #0
 8001180:	f04f 32ff 	mov.w	r2, #4294967295
 8001184:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001188:	f10a 0a01 	add.w	sl, sl, #1
 800118c:	9304      	str	r3, [sp, #16]
 800118e:	9307      	str	r3, [sp, #28]
 8001190:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8001194:	931a      	str	r3, [sp, #104]	@ 0x68
 8001196:	4654      	mov	r4, sl
 8001198:	2205      	movs	r2, #5
 800119a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800119e:	4853      	ldr	r0, [pc, #332]	@ (80012ec <_vfiprintf_r+0x21c>)
 80011a0:	f7ff f816 	bl	80001d0 <memchr>
 80011a4:	9a04      	ldr	r2, [sp, #16]
 80011a6:	b9d8      	cbnz	r0, 80011e0 <_vfiprintf_r+0x110>
 80011a8:	06d1      	lsls	r1, r2, #27
 80011aa:	bf44      	itt	mi
 80011ac:	2320      	movmi	r3, #32
 80011ae:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80011b2:	0713      	lsls	r3, r2, #28
 80011b4:	bf44      	itt	mi
 80011b6:	232b      	movmi	r3, #43	@ 0x2b
 80011b8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80011bc:	f89a 3000 	ldrb.w	r3, [sl]
 80011c0:	2b2a      	cmp	r3, #42	@ 0x2a
 80011c2:	d015      	beq.n	80011f0 <_vfiprintf_r+0x120>
 80011c4:	9a07      	ldr	r2, [sp, #28]
 80011c6:	4654      	mov	r4, sl
 80011c8:	2000      	movs	r0, #0
 80011ca:	f04f 0c0a 	mov.w	ip, #10
 80011ce:	4621      	mov	r1, r4
 80011d0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80011d4:	3b30      	subs	r3, #48	@ 0x30
 80011d6:	2b09      	cmp	r3, #9
 80011d8:	d94b      	bls.n	8001272 <_vfiprintf_r+0x1a2>
 80011da:	b1b0      	cbz	r0, 800120a <_vfiprintf_r+0x13a>
 80011dc:	9207      	str	r2, [sp, #28]
 80011de:	e014      	b.n	800120a <_vfiprintf_r+0x13a>
 80011e0:	eba0 0308 	sub.w	r3, r0, r8
 80011e4:	fa09 f303 	lsl.w	r3, r9, r3
 80011e8:	4313      	orrs	r3, r2
 80011ea:	9304      	str	r3, [sp, #16]
 80011ec:	46a2      	mov	sl, r4
 80011ee:	e7d2      	b.n	8001196 <_vfiprintf_r+0xc6>
 80011f0:	9b03      	ldr	r3, [sp, #12]
 80011f2:	1d19      	adds	r1, r3, #4
 80011f4:	681b      	ldr	r3, [r3, #0]
 80011f6:	9103      	str	r1, [sp, #12]
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	bfbb      	ittet	lt
 80011fc:	425b      	neglt	r3, r3
 80011fe:	f042 0202 	orrlt.w	r2, r2, #2
 8001202:	9307      	strge	r3, [sp, #28]
 8001204:	9307      	strlt	r3, [sp, #28]
 8001206:	bfb8      	it	lt
 8001208:	9204      	strlt	r2, [sp, #16]
 800120a:	7823      	ldrb	r3, [r4, #0]
 800120c:	2b2e      	cmp	r3, #46	@ 0x2e
 800120e:	d10a      	bne.n	8001226 <_vfiprintf_r+0x156>
 8001210:	7863      	ldrb	r3, [r4, #1]
 8001212:	2b2a      	cmp	r3, #42	@ 0x2a
 8001214:	d132      	bne.n	800127c <_vfiprintf_r+0x1ac>
 8001216:	9b03      	ldr	r3, [sp, #12]
 8001218:	1d1a      	adds	r2, r3, #4
 800121a:	681b      	ldr	r3, [r3, #0]
 800121c:	9203      	str	r2, [sp, #12]
 800121e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8001222:	3402      	adds	r4, #2
 8001224:	9305      	str	r3, [sp, #20]
 8001226:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80012fc <_vfiprintf_r+0x22c>
 800122a:	7821      	ldrb	r1, [r4, #0]
 800122c:	2203      	movs	r2, #3
 800122e:	4650      	mov	r0, sl
 8001230:	f7fe ffce 	bl	80001d0 <memchr>
 8001234:	b138      	cbz	r0, 8001246 <_vfiprintf_r+0x176>
 8001236:	9b04      	ldr	r3, [sp, #16]
 8001238:	eba0 000a 	sub.w	r0, r0, sl
 800123c:	2240      	movs	r2, #64	@ 0x40
 800123e:	4082      	lsls	r2, r0
 8001240:	4313      	orrs	r3, r2
 8001242:	3401      	adds	r4, #1
 8001244:	9304      	str	r3, [sp, #16]
 8001246:	f814 1b01 	ldrb.w	r1, [r4], #1
 800124a:	4829      	ldr	r0, [pc, #164]	@ (80012f0 <_vfiprintf_r+0x220>)
 800124c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8001250:	2206      	movs	r2, #6
 8001252:	f7fe ffbd 	bl	80001d0 <memchr>
 8001256:	2800      	cmp	r0, #0
 8001258:	d03f      	beq.n	80012da <_vfiprintf_r+0x20a>
 800125a:	4b26      	ldr	r3, [pc, #152]	@ (80012f4 <_vfiprintf_r+0x224>)
 800125c:	bb1b      	cbnz	r3, 80012a6 <_vfiprintf_r+0x1d6>
 800125e:	9b03      	ldr	r3, [sp, #12]
 8001260:	3307      	adds	r3, #7
 8001262:	f023 0307 	bic.w	r3, r3, #7
 8001266:	3308      	adds	r3, #8
 8001268:	9303      	str	r3, [sp, #12]
 800126a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800126c:	443b      	add	r3, r7
 800126e:	9309      	str	r3, [sp, #36]	@ 0x24
 8001270:	e76a      	b.n	8001148 <_vfiprintf_r+0x78>
 8001272:	fb0c 3202 	mla	r2, ip, r2, r3
 8001276:	460c      	mov	r4, r1
 8001278:	2001      	movs	r0, #1
 800127a:	e7a8      	b.n	80011ce <_vfiprintf_r+0xfe>
 800127c:	2300      	movs	r3, #0
 800127e:	3401      	adds	r4, #1
 8001280:	9305      	str	r3, [sp, #20]
 8001282:	4619      	mov	r1, r3
 8001284:	f04f 0c0a 	mov.w	ip, #10
 8001288:	4620      	mov	r0, r4
 800128a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800128e:	3a30      	subs	r2, #48	@ 0x30
 8001290:	2a09      	cmp	r2, #9
 8001292:	d903      	bls.n	800129c <_vfiprintf_r+0x1cc>
 8001294:	2b00      	cmp	r3, #0
 8001296:	d0c6      	beq.n	8001226 <_vfiprintf_r+0x156>
 8001298:	9105      	str	r1, [sp, #20]
 800129a:	e7c4      	b.n	8001226 <_vfiprintf_r+0x156>
 800129c:	fb0c 2101 	mla	r1, ip, r1, r2
 80012a0:	4604      	mov	r4, r0
 80012a2:	2301      	movs	r3, #1
 80012a4:	e7f0      	b.n	8001288 <_vfiprintf_r+0x1b8>
 80012a6:	ab03      	add	r3, sp, #12
 80012a8:	9300      	str	r3, [sp, #0]
 80012aa:	462a      	mov	r2, r5
 80012ac:	4b12      	ldr	r3, [pc, #72]	@ (80012f8 <_vfiprintf_r+0x228>)
 80012ae:	a904      	add	r1, sp, #16
 80012b0:	4630      	mov	r0, r6
 80012b2:	f3af 8000 	nop.w
 80012b6:	4607      	mov	r7, r0
 80012b8:	1c78      	adds	r0, r7, #1
 80012ba:	d1d6      	bne.n	800126a <_vfiprintf_r+0x19a>
 80012bc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80012be:	07d9      	lsls	r1, r3, #31
 80012c0:	d405      	bmi.n	80012ce <_vfiprintf_r+0x1fe>
 80012c2:	89ab      	ldrh	r3, [r5, #12]
 80012c4:	059a      	lsls	r2, r3, #22
 80012c6:	d402      	bmi.n	80012ce <_vfiprintf_r+0x1fe>
 80012c8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80012ca:	f7ff fdd7 	bl	8000e7c <__retarget_lock_release_recursive>
 80012ce:	89ab      	ldrh	r3, [r5, #12]
 80012d0:	065b      	lsls	r3, r3, #25
 80012d2:	f53f af1f 	bmi.w	8001114 <_vfiprintf_r+0x44>
 80012d6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80012d8:	e71e      	b.n	8001118 <_vfiprintf_r+0x48>
 80012da:	ab03      	add	r3, sp, #12
 80012dc:	9300      	str	r3, [sp, #0]
 80012de:	462a      	mov	r2, r5
 80012e0:	4b05      	ldr	r3, [pc, #20]	@ (80012f8 <_vfiprintf_r+0x228>)
 80012e2:	a904      	add	r1, sp, #16
 80012e4:	4630      	mov	r0, r6
 80012e6:	f000 f879 	bl	80013dc <_printf_i>
 80012ea:	e7e4      	b.n	80012b6 <_vfiprintf_r+0x1e6>
 80012ec:	08001bc2 	.word	0x08001bc2
 80012f0:	08001bcc 	.word	0x08001bcc
 80012f4:	00000000 	.word	0x00000000
 80012f8:	080010ab 	.word	0x080010ab
 80012fc:	08001bc8 	.word	0x08001bc8

08001300 <_printf_common>:
 8001300:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001304:	4616      	mov	r6, r2
 8001306:	4698      	mov	r8, r3
 8001308:	688a      	ldr	r2, [r1, #8]
 800130a:	690b      	ldr	r3, [r1, #16]
 800130c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001310:	4293      	cmp	r3, r2
 8001312:	bfb8      	it	lt
 8001314:	4613      	movlt	r3, r2
 8001316:	6033      	str	r3, [r6, #0]
 8001318:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800131c:	4607      	mov	r7, r0
 800131e:	460c      	mov	r4, r1
 8001320:	b10a      	cbz	r2, 8001326 <_printf_common+0x26>
 8001322:	3301      	adds	r3, #1
 8001324:	6033      	str	r3, [r6, #0]
 8001326:	6823      	ldr	r3, [r4, #0]
 8001328:	0699      	lsls	r1, r3, #26
 800132a:	bf42      	ittt	mi
 800132c:	6833      	ldrmi	r3, [r6, #0]
 800132e:	3302      	addmi	r3, #2
 8001330:	6033      	strmi	r3, [r6, #0]
 8001332:	6825      	ldr	r5, [r4, #0]
 8001334:	f015 0506 	ands.w	r5, r5, #6
 8001338:	d106      	bne.n	8001348 <_printf_common+0x48>
 800133a:	f104 0a19 	add.w	sl, r4, #25
 800133e:	68e3      	ldr	r3, [r4, #12]
 8001340:	6832      	ldr	r2, [r6, #0]
 8001342:	1a9b      	subs	r3, r3, r2
 8001344:	42ab      	cmp	r3, r5
 8001346:	dc26      	bgt.n	8001396 <_printf_common+0x96>
 8001348:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800134c:	6822      	ldr	r2, [r4, #0]
 800134e:	3b00      	subs	r3, #0
 8001350:	bf18      	it	ne
 8001352:	2301      	movne	r3, #1
 8001354:	0692      	lsls	r2, r2, #26
 8001356:	d42b      	bmi.n	80013b0 <_printf_common+0xb0>
 8001358:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800135c:	4641      	mov	r1, r8
 800135e:	4638      	mov	r0, r7
 8001360:	47c8      	blx	r9
 8001362:	3001      	adds	r0, #1
 8001364:	d01e      	beq.n	80013a4 <_printf_common+0xa4>
 8001366:	6823      	ldr	r3, [r4, #0]
 8001368:	6922      	ldr	r2, [r4, #16]
 800136a:	f003 0306 	and.w	r3, r3, #6
 800136e:	2b04      	cmp	r3, #4
 8001370:	bf02      	ittt	eq
 8001372:	68e5      	ldreq	r5, [r4, #12]
 8001374:	6833      	ldreq	r3, [r6, #0]
 8001376:	1aed      	subeq	r5, r5, r3
 8001378:	68a3      	ldr	r3, [r4, #8]
 800137a:	bf0c      	ite	eq
 800137c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001380:	2500      	movne	r5, #0
 8001382:	4293      	cmp	r3, r2
 8001384:	bfc4      	itt	gt
 8001386:	1a9b      	subgt	r3, r3, r2
 8001388:	18ed      	addgt	r5, r5, r3
 800138a:	2600      	movs	r6, #0
 800138c:	341a      	adds	r4, #26
 800138e:	42b5      	cmp	r5, r6
 8001390:	d11a      	bne.n	80013c8 <_printf_common+0xc8>
 8001392:	2000      	movs	r0, #0
 8001394:	e008      	b.n	80013a8 <_printf_common+0xa8>
 8001396:	2301      	movs	r3, #1
 8001398:	4652      	mov	r2, sl
 800139a:	4641      	mov	r1, r8
 800139c:	4638      	mov	r0, r7
 800139e:	47c8      	blx	r9
 80013a0:	3001      	adds	r0, #1
 80013a2:	d103      	bne.n	80013ac <_printf_common+0xac>
 80013a4:	f04f 30ff 	mov.w	r0, #4294967295
 80013a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80013ac:	3501      	adds	r5, #1
 80013ae:	e7c6      	b.n	800133e <_printf_common+0x3e>
 80013b0:	18e1      	adds	r1, r4, r3
 80013b2:	1c5a      	adds	r2, r3, #1
 80013b4:	2030      	movs	r0, #48	@ 0x30
 80013b6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80013ba:	4422      	add	r2, r4
 80013bc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80013c0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80013c4:	3302      	adds	r3, #2
 80013c6:	e7c7      	b.n	8001358 <_printf_common+0x58>
 80013c8:	2301      	movs	r3, #1
 80013ca:	4622      	mov	r2, r4
 80013cc:	4641      	mov	r1, r8
 80013ce:	4638      	mov	r0, r7
 80013d0:	47c8      	blx	r9
 80013d2:	3001      	adds	r0, #1
 80013d4:	d0e6      	beq.n	80013a4 <_printf_common+0xa4>
 80013d6:	3601      	adds	r6, #1
 80013d8:	e7d9      	b.n	800138e <_printf_common+0x8e>
	...

080013dc <_printf_i>:
 80013dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80013e0:	7e0f      	ldrb	r7, [r1, #24]
 80013e2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80013e4:	2f78      	cmp	r7, #120	@ 0x78
 80013e6:	4691      	mov	r9, r2
 80013e8:	4680      	mov	r8, r0
 80013ea:	460c      	mov	r4, r1
 80013ec:	469a      	mov	sl, r3
 80013ee:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80013f2:	d807      	bhi.n	8001404 <_printf_i+0x28>
 80013f4:	2f62      	cmp	r7, #98	@ 0x62
 80013f6:	d80a      	bhi.n	800140e <_printf_i+0x32>
 80013f8:	2f00      	cmp	r7, #0
 80013fa:	f000 80d2 	beq.w	80015a2 <_printf_i+0x1c6>
 80013fe:	2f58      	cmp	r7, #88	@ 0x58
 8001400:	f000 80b9 	beq.w	8001576 <_printf_i+0x19a>
 8001404:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001408:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800140c:	e03a      	b.n	8001484 <_printf_i+0xa8>
 800140e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001412:	2b15      	cmp	r3, #21
 8001414:	d8f6      	bhi.n	8001404 <_printf_i+0x28>
 8001416:	a101      	add	r1, pc, #4	@ (adr r1, 800141c <_printf_i+0x40>)
 8001418:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800141c:	08001475 	.word	0x08001475
 8001420:	08001489 	.word	0x08001489
 8001424:	08001405 	.word	0x08001405
 8001428:	08001405 	.word	0x08001405
 800142c:	08001405 	.word	0x08001405
 8001430:	08001405 	.word	0x08001405
 8001434:	08001489 	.word	0x08001489
 8001438:	08001405 	.word	0x08001405
 800143c:	08001405 	.word	0x08001405
 8001440:	08001405 	.word	0x08001405
 8001444:	08001405 	.word	0x08001405
 8001448:	08001589 	.word	0x08001589
 800144c:	080014b3 	.word	0x080014b3
 8001450:	08001543 	.word	0x08001543
 8001454:	08001405 	.word	0x08001405
 8001458:	08001405 	.word	0x08001405
 800145c:	080015ab 	.word	0x080015ab
 8001460:	08001405 	.word	0x08001405
 8001464:	080014b3 	.word	0x080014b3
 8001468:	08001405 	.word	0x08001405
 800146c:	08001405 	.word	0x08001405
 8001470:	0800154b 	.word	0x0800154b
 8001474:	6833      	ldr	r3, [r6, #0]
 8001476:	1d1a      	adds	r2, r3, #4
 8001478:	681b      	ldr	r3, [r3, #0]
 800147a:	6032      	str	r2, [r6, #0]
 800147c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001480:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001484:	2301      	movs	r3, #1
 8001486:	e09d      	b.n	80015c4 <_printf_i+0x1e8>
 8001488:	6833      	ldr	r3, [r6, #0]
 800148a:	6820      	ldr	r0, [r4, #0]
 800148c:	1d19      	adds	r1, r3, #4
 800148e:	6031      	str	r1, [r6, #0]
 8001490:	0606      	lsls	r6, r0, #24
 8001492:	d501      	bpl.n	8001498 <_printf_i+0xbc>
 8001494:	681d      	ldr	r5, [r3, #0]
 8001496:	e003      	b.n	80014a0 <_printf_i+0xc4>
 8001498:	0645      	lsls	r5, r0, #25
 800149a:	d5fb      	bpl.n	8001494 <_printf_i+0xb8>
 800149c:	f9b3 5000 	ldrsh.w	r5, [r3]
 80014a0:	2d00      	cmp	r5, #0
 80014a2:	da03      	bge.n	80014ac <_printf_i+0xd0>
 80014a4:	232d      	movs	r3, #45	@ 0x2d
 80014a6:	426d      	negs	r5, r5
 80014a8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80014ac:	4859      	ldr	r0, [pc, #356]	@ (8001614 <_printf_i+0x238>)
 80014ae:	230a      	movs	r3, #10
 80014b0:	e011      	b.n	80014d6 <_printf_i+0xfa>
 80014b2:	6821      	ldr	r1, [r4, #0]
 80014b4:	6833      	ldr	r3, [r6, #0]
 80014b6:	0608      	lsls	r0, r1, #24
 80014b8:	f853 5b04 	ldr.w	r5, [r3], #4
 80014bc:	d402      	bmi.n	80014c4 <_printf_i+0xe8>
 80014be:	0649      	lsls	r1, r1, #25
 80014c0:	bf48      	it	mi
 80014c2:	b2ad      	uxthmi	r5, r5
 80014c4:	2f6f      	cmp	r7, #111	@ 0x6f
 80014c6:	4853      	ldr	r0, [pc, #332]	@ (8001614 <_printf_i+0x238>)
 80014c8:	6033      	str	r3, [r6, #0]
 80014ca:	bf14      	ite	ne
 80014cc:	230a      	movne	r3, #10
 80014ce:	2308      	moveq	r3, #8
 80014d0:	2100      	movs	r1, #0
 80014d2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80014d6:	6866      	ldr	r6, [r4, #4]
 80014d8:	60a6      	str	r6, [r4, #8]
 80014da:	2e00      	cmp	r6, #0
 80014dc:	bfa2      	ittt	ge
 80014de:	6821      	ldrge	r1, [r4, #0]
 80014e0:	f021 0104 	bicge.w	r1, r1, #4
 80014e4:	6021      	strge	r1, [r4, #0]
 80014e6:	b90d      	cbnz	r5, 80014ec <_printf_i+0x110>
 80014e8:	2e00      	cmp	r6, #0
 80014ea:	d04b      	beq.n	8001584 <_printf_i+0x1a8>
 80014ec:	4616      	mov	r6, r2
 80014ee:	fbb5 f1f3 	udiv	r1, r5, r3
 80014f2:	fb03 5711 	mls	r7, r3, r1, r5
 80014f6:	5dc7      	ldrb	r7, [r0, r7]
 80014f8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80014fc:	462f      	mov	r7, r5
 80014fe:	42bb      	cmp	r3, r7
 8001500:	460d      	mov	r5, r1
 8001502:	d9f4      	bls.n	80014ee <_printf_i+0x112>
 8001504:	2b08      	cmp	r3, #8
 8001506:	d10b      	bne.n	8001520 <_printf_i+0x144>
 8001508:	6823      	ldr	r3, [r4, #0]
 800150a:	07df      	lsls	r7, r3, #31
 800150c:	d508      	bpl.n	8001520 <_printf_i+0x144>
 800150e:	6923      	ldr	r3, [r4, #16]
 8001510:	6861      	ldr	r1, [r4, #4]
 8001512:	4299      	cmp	r1, r3
 8001514:	bfde      	ittt	le
 8001516:	2330      	movle	r3, #48	@ 0x30
 8001518:	f806 3c01 	strble.w	r3, [r6, #-1]
 800151c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001520:	1b92      	subs	r2, r2, r6
 8001522:	6122      	str	r2, [r4, #16]
 8001524:	f8cd a000 	str.w	sl, [sp]
 8001528:	464b      	mov	r3, r9
 800152a:	aa03      	add	r2, sp, #12
 800152c:	4621      	mov	r1, r4
 800152e:	4640      	mov	r0, r8
 8001530:	f7ff fee6 	bl	8001300 <_printf_common>
 8001534:	3001      	adds	r0, #1
 8001536:	d14a      	bne.n	80015ce <_printf_i+0x1f2>
 8001538:	f04f 30ff 	mov.w	r0, #4294967295
 800153c:	b004      	add	sp, #16
 800153e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001542:	6823      	ldr	r3, [r4, #0]
 8001544:	f043 0320 	orr.w	r3, r3, #32
 8001548:	6023      	str	r3, [r4, #0]
 800154a:	4833      	ldr	r0, [pc, #204]	@ (8001618 <_printf_i+0x23c>)
 800154c:	2778      	movs	r7, #120	@ 0x78
 800154e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001552:	6823      	ldr	r3, [r4, #0]
 8001554:	6831      	ldr	r1, [r6, #0]
 8001556:	061f      	lsls	r7, r3, #24
 8001558:	f851 5b04 	ldr.w	r5, [r1], #4
 800155c:	d402      	bmi.n	8001564 <_printf_i+0x188>
 800155e:	065f      	lsls	r7, r3, #25
 8001560:	bf48      	it	mi
 8001562:	b2ad      	uxthmi	r5, r5
 8001564:	6031      	str	r1, [r6, #0]
 8001566:	07d9      	lsls	r1, r3, #31
 8001568:	bf44      	itt	mi
 800156a:	f043 0320 	orrmi.w	r3, r3, #32
 800156e:	6023      	strmi	r3, [r4, #0]
 8001570:	b11d      	cbz	r5, 800157a <_printf_i+0x19e>
 8001572:	2310      	movs	r3, #16
 8001574:	e7ac      	b.n	80014d0 <_printf_i+0xf4>
 8001576:	4827      	ldr	r0, [pc, #156]	@ (8001614 <_printf_i+0x238>)
 8001578:	e7e9      	b.n	800154e <_printf_i+0x172>
 800157a:	6823      	ldr	r3, [r4, #0]
 800157c:	f023 0320 	bic.w	r3, r3, #32
 8001580:	6023      	str	r3, [r4, #0]
 8001582:	e7f6      	b.n	8001572 <_printf_i+0x196>
 8001584:	4616      	mov	r6, r2
 8001586:	e7bd      	b.n	8001504 <_printf_i+0x128>
 8001588:	6833      	ldr	r3, [r6, #0]
 800158a:	6825      	ldr	r5, [r4, #0]
 800158c:	6961      	ldr	r1, [r4, #20]
 800158e:	1d18      	adds	r0, r3, #4
 8001590:	6030      	str	r0, [r6, #0]
 8001592:	062e      	lsls	r6, r5, #24
 8001594:	681b      	ldr	r3, [r3, #0]
 8001596:	d501      	bpl.n	800159c <_printf_i+0x1c0>
 8001598:	6019      	str	r1, [r3, #0]
 800159a:	e002      	b.n	80015a2 <_printf_i+0x1c6>
 800159c:	0668      	lsls	r0, r5, #25
 800159e:	d5fb      	bpl.n	8001598 <_printf_i+0x1bc>
 80015a0:	8019      	strh	r1, [r3, #0]
 80015a2:	2300      	movs	r3, #0
 80015a4:	6123      	str	r3, [r4, #16]
 80015a6:	4616      	mov	r6, r2
 80015a8:	e7bc      	b.n	8001524 <_printf_i+0x148>
 80015aa:	6833      	ldr	r3, [r6, #0]
 80015ac:	1d1a      	adds	r2, r3, #4
 80015ae:	6032      	str	r2, [r6, #0]
 80015b0:	681e      	ldr	r6, [r3, #0]
 80015b2:	6862      	ldr	r2, [r4, #4]
 80015b4:	2100      	movs	r1, #0
 80015b6:	4630      	mov	r0, r6
 80015b8:	f7fe fe0a 	bl	80001d0 <memchr>
 80015bc:	b108      	cbz	r0, 80015c2 <_printf_i+0x1e6>
 80015be:	1b80      	subs	r0, r0, r6
 80015c0:	6060      	str	r0, [r4, #4]
 80015c2:	6863      	ldr	r3, [r4, #4]
 80015c4:	6123      	str	r3, [r4, #16]
 80015c6:	2300      	movs	r3, #0
 80015c8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80015cc:	e7aa      	b.n	8001524 <_printf_i+0x148>
 80015ce:	6923      	ldr	r3, [r4, #16]
 80015d0:	4632      	mov	r2, r6
 80015d2:	4649      	mov	r1, r9
 80015d4:	4640      	mov	r0, r8
 80015d6:	47d0      	blx	sl
 80015d8:	3001      	adds	r0, #1
 80015da:	d0ad      	beq.n	8001538 <_printf_i+0x15c>
 80015dc:	6823      	ldr	r3, [r4, #0]
 80015de:	079b      	lsls	r3, r3, #30
 80015e0:	d413      	bmi.n	800160a <_printf_i+0x22e>
 80015e2:	68e0      	ldr	r0, [r4, #12]
 80015e4:	9b03      	ldr	r3, [sp, #12]
 80015e6:	4298      	cmp	r0, r3
 80015e8:	bfb8      	it	lt
 80015ea:	4618      	movlt	r0, r3
 80015ec:	e7a6      	b.n	800153c <_printf_i+0x160>
 80015ee:	2301      	movs	r3, #1
 80015f0:	4632      	mov	r2, r6
 80015f2:	4649      	mov	r1, r9
 80015f4:	4640      	mov	r0, r8
 80015f6:	47d0      	blx	sl
 80015f8:	3001      	adds	r0, #1
 80015fa:	d09d      	beq.n	8001538 <_printf_i+0x15c>
 80015fc:	3501      	adds	r5, #1
 80015fe:	68e3      	ldr	r3, [r4, #12]
 8001600:	9903      	ldr	r1, [sp, #12]
 8001602:	1a5b      	subs	r3, r3, r1
 8001604:	42ab      	cmp	r3, r5
 8001606:	dcf2      	bgt.n	80015ee <_printf_i+0x212>
 8001608:	e7eb      	b.n	80015e2 <_printf_i+0x206>
 800160a:	2500      	movs	r5, #0
 800160c:	f104 0619 	add.w	r6, r4, #25
 8001610:	e7f5      	b.n	80015fe <_printf_i+0x222>
 8001612:	bf00      	nop
 8001614:	08001bd3 	.word	0x08001bd3
 8001618:	08001be4 	.word	0x08001be4

0800161c <__sflush_r>:
 800161c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001620:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001624:	0716      	lsls	r6, r2, #28
 8001626:	4605      	mov	r5, r0
 8001628:	460c      	mov	r4, r1
 800162a:	d454      	bmi.n	80016d6 <__sflush_r+0xba>
 800162c:	684b      	ldr	r3, [r1, #4]
 800162e:	2b00      	cmp	r3, #0
 8001630:	dc02      	bgt.n	8001638 <__sflush_r+0x1c>
 8001632:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001634:	2b00      	cmp	r3, #0
 8001636:	dd48      	ble.n	80016ca <__sflush_r+0xae>
 8001638:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800163a:	2e00      	cmp	r6, #0
 800163c:	d045      	beq.n	80016ca <__sflush_r+0xae>
 800163e:	2300      	movs	r3, #0
 8001640:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001644:	682f      	ldr	r7, [r5, #0]
 8001646:	6a21      	ldr	r1, [r4, #32]
 8001648:	602b      	str	r3, [r5, #0]
 800164a:	d030      	beq.n	80016ae <__sflush_r+0x92>
 800164c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800164e:	89a3      	ldrh	r3, [r4, #12]
 8001650:	0759      	lsls	r1, r3, #29
 8001652:	d505      	bpl.n	8001660 <__sflush_r+0x44>
 8001654:	6863      	ldr	r3, [r4, #4]
 8001656:	1ad2      	subs	r2, r2, r3
 8001658:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800165a:	b10b      	cbz	r3, 8001660 <__sflush_r+0x44>
 800165c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800165e:	1ad2      	subs	r2, r2, r3
 8001660:	2300      	movs	r3, #0
 8001662:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001664:	6a21      	ldr	r1, [r4, #32]
 8001666:	4628      	mov	r0, r5
 8001668:	47b0      	blx	r6
 800166a:	1c43      	adds	r3, r0, #1
 800166c:	89a3      	ldrh	r3, [r4, #12]
 800166e:	d106      	bne.n	800167e <__sflush_r+0x62>
 8001670:	6829      	ldr	r1, [r5, #0]
 8001672:	291d      	cmp	r1, #29
 8001674:	d82b      	bhi.n	80016ce <__sflush_r+0xb2>
 8001676:	4a2a      	ldr	r2, [pc, #168]	@ (8001720 <__sflush_r+0x104>)
 8001678:	410a      	asrs	r2, r1
 800167a:	07d6      	lsls	r6, r2, #31
 800167c:	d427      	bmi.n	80016ce <__sflush_r+0xb2>
 800167e:	2200      	movs	r2, #0
 8001680:	6062      	str	r2, [r4, #4]
 8001682:	04d9      	lsls	r1, r3, #19
 8001684:	6922      	ldr	r2, [r4, #16]
 8001686:	6022      	str	r2, [r4, #0]
 8001688:	d504      	bpl.n	8001694 <__sflush_r+0x78>
 800168a:	1c42      	adds	r2, r0, #1
 800168c:	d101      	bne.n	8001692 <__sflush_r+0x76>
 800168e:	682b      	ldr	r3, [r5, #0]
 8001690:	b903      	cbnz	r3, 8001694 <__sflush_r+0x78>
 8001692:	6560      	str	r0, [r4, #84]	@ 0x54
 8001694:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001696:	602f      	str	r7, [r5, #0]
 8001698:	b1b9      	cbz	r1, 80016ca <__sflush_r+0xae>
 800169a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800169e:	4299      	cmp	r1, r3
 80016a0:	d002      	beq.n	80016a8 <__sflush_r+0x8c>
 80016a2:	4628      	mov	r0, r5
 80016a4:	f7ff fbf2 	bl	8000e8c <_free_r>
 80016a8:	2300      	movs	r3, #0
 80016aa:	6363      	str	r3, [r4, #52]	@ 0x34
 80016ac:	e00d      	b.n	80016ca <__sflush_r+0xae>
 80016ae:	2301      	movs	r3, #1
 80016b0:	4628      	mov	r0, r5
 80016b2:	47b0      	blx	r6
 80016b4:	4602      	mov	r2, r0
 80016b6:	1c50      	adds	r0, r2, #1
 80016b8:	d1c9      	bne.n	800164e <__sflush_r+0x32>
 80016ba:	682b      	ldr	r3, [r5, #0]
 80016bc:	2b00      	cmp	r3, #0
 80016be:	d0c6      	beq.n	800164e <__sflush_r+0x32>
 80016c0:	2b1d      	cmp	r3, #29
 80016c2:	d001      	beq.n	80016c8 <__sflush_r+0xac>
 80016c4:	2b16      	cmp	r3, #22
 80016c6:	d11e      	bne.n	8001706 <__sflush_r+0xea>
 80016c8:	602f      	str	r7, [r5, #0]
 80016ca:	2000      	movs	r0, #0
 80016cc:	e022      	b.n	8001714 <__sflush_r+0xf8>
 80016ce:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80016d2:	b21b      	sxth	r3, r3
 80016d4:	e01b      	b.n	800170e <__sflush_r+0xf2>
 80016d6:	690f      	ldr	r7, [r1, #16]
 80016d8:	2f00      	cmp	r7, #0
 80016da:	d0f6      	beq.n	80016ca <__sflush_r+0xae>
 80016dc:	0793      	lsls	r3, r2, #30
 80016de:	680e      	ldr	r6, [r1, #0]
 80016e0:	bf08      	it	eq
 80016e2:	694b      	ldreq	r3, [r1, #20]
 80016e4:	600f      	str	r7, [r1, #0]
 80016e6:	bf18      	it	ne
 80016e8:	2300      	movne	r3, #0
 80016ea:	eba6 0807 	sub.w	r8, r6, r7
 80016ee:	608b      	str	r3, [r1, #8]
 80016f0:	f1b8 0f00 	cmp.w	r8, #0
 80016f4:	dde9      	ble.n	80016ca <__sflush_r+0xae>
 80016f6:	6a21      	ldr	r1, [r4, #32]
 80016f8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80016fa:	4643      	mov	r3, r8
 80016fc:	463a      	mov	r2, r7
 80016fe:	4628      	mov	r0, r5
 8001700:	47b0      	blx	r6
 8001702:	2800      	cmp	r0, #0
 8001704:	dc08      	bgt.n	8001718 <__sflush_r+0xfc>
 8001706:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800170a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800170e:	81a3      	strh	r3, [r4, #12]
 8001710:	f04f 30ff 	mov.w	r0, #4294967295
 8001714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001718:	4407      	add	r7, r0
 800171a:	eba8 0800 	sub.w	r8, r8, r0
 800171e:	e7e7      	b.n	80016f0 <__sflush_r+0xd4>
 8001720:	dfbffffe 	.word	0xdfbffffe

08001724 <_fflush_r>:
 8001724:	b538      	push	{r3, r4, r5, lr}
 8001726:	690b      	ldr	r3, [r1, #16]
 8001728:	4605      	mov	r5, r0
 800172a:	460c      	mov	r4, r1
 800172c:	b913      	cbnz	r3, 8001734 <_fflush_r+0x10>
 800172e:	2500      	movs	r5, #0
 8001730:	4628      	mov	r0, r5
 8001732:	bd38      	pop	{r3, r4, r5, pc}
 8001734:	b118      	cbz	r0, 800173e <_fflush_r+0x1a>
 8001736:	6a03      	ldr	r3, [r0, #32]
 8001738:	b90b      	cbnz	r3, 800173e <_fflush_r+0x1a>
 800173a:	f7ff fa9f 	bl	8000c7c <__sinit>
 800173e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001742:	2b00      	cmp	r3, #0
 8001744:	d0f3      	beq.n	800172e <_fflush_r+0xa>
 8001746:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001748:	07d0      	lsls	r0, r2, #31
 800174a:	d404      	bmi.n	8001756 <_fflush_r+0x32>
 800174c:	0599      	lsls	r1, r3, #22
 800174e:	d402      	bmi.n	8001756 <_fflush_r+0x32>
 8001750:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001752:	f7ff fb92 	bl	8000e7a <__retarget_lock_acquire_recursive>
 8001756:	4628      	mov	r0, r5
 8001758:	4621      	mov	r1, r4
 800175a:	f7ff ff5f 	bl	800161c <__sflush_r>
 800175e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001760:	07da      	lsls	r2, r3, #31
 8001762:	4605      	mov	r5, r0
 8001764:	d4e4      	bmi.n	8001730 <_fflush_r+0xc>
 8001766:	89a3      	ldrh	r3, [r4, #12]
 8001768:	059b      	lsls	r3, r3, #22
 800176a:	d4e1      	bmi.n	8001730 <_fflush_r+0xc>
 800176c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800176e:	f7ff fb85 	bl	8000e7c <__retarget_lock_release_recursive>
 8001772:	e7dd      	b.n	8001730 <_fflush_r+0xc>

08001774 <__swbuf_r>:
 8001774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001776:	460e      	mov	r6, r1
 8001778:	4614      	mov	r4, r2
 800177a:	4605      	mov	r5, r0
 800177c:	b118      	cbz	r0, 8001786 <__swbuf_r+0x12>
 800177e:	6a03      	ldr	r3, [r0, #32]
 8001780:	b90b      	cbnz	r3, 8001786 <__swbuf_r+0x12>
 8001782:	f7ff fa7b 	bl	8000c7c <__sinit>
 8001786:	69a3      	ldr	r3, [r4, #24]
 8001788:	60a3      	str	r3, [r4, #8]
 800178a:	89a3      	ldrh	r3, [r4, #12]
 800178c:	071a      	lsls	r2, r3, #28
 800178e:	d501      	bpl.n	8001794 <__swbuf_r+0x20>
 8001790:	6923      	ldr	r3, [r4, #16]
 8001792:	b943      	cbnz	r3, 80017a6 <__swbuf_r+0x32>
 8001794:	4621      	mov	r1, r4
 8001796:	4628      	mov	r0, r5
 8001798:	f000 f82a 	bl	80017f0 <__swsetup_r>
 800179c:	b118      	cbz	r0, 80017a6 <__swbuf_r+0x32>
 800179e:	f04f 37ff 	mov.w	r7, #4294967295
 80017a2:	4638      	mov	r0, r7
 80017a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80017a6:	6823      	ldr	r3, [r4, #0]
 80017a8:	6922      	ldr	r2, [r4, #16]
 80017aa:	1a98      	subs	r0, r3, r2
 80017ac:	6963      	ldr	r3, [r4, #20]
 80017ae:	b2f6      	uxtb	r6, r6
 80017b0:	4283      	cmp	r3, r0
 80017b2:	4637      	mov	r7, r6
 80017b4:	dc05      	bgt.n	80017c2 <__swbuf_r+0x4e>
 80017b6:	4621      	mov	r1, r4
 80017b8:	4628      	mov	r0, r5
 80017ba:	f7ff ffb3 	bl	8001724 <_fflush_r>
 80017be:	2800      	cmp	r0, #0
 80017c0:	d1ed      	bne.n	800179e <__swbuf_r+0x2a>
 80017c2:	68a3      	ldr	r3, [r4, #8]
 80017c4:	3b01      	subs	r3, #1
 80017c6:	60a3      	str	r3, [r4, #8]
 80017c8:	6823      	ldr	r3, [r4, #0]
 80017ca:	1c5a      	adds	r2, r3, #1
 80017cc:	6022      	str	r2, [r4, #0]
 80017ce:	701e      	strb	r6, [r3, #0]
 80017d0:	6962      	ldr	r2, [r4, #20]
 80017d2:	1c43      	adds	r3, r0, #1
 80017d4:	429a      	cmp	r2, r3
 80017d6:	d004      	beq.n	80017e2 <__swbuf_r+0x6e>
 80017d8:	89a3      	ldrh	r3, [r4, #12]
 80017da:	07db      	lsls	r3, r3, #31
 80017dc:	d5e1      	bpl.n	80017a2 <__swbuf_r+0x2e>
 80017de:	2e0a      	cmp	r6, #10
 80017e0:	d1df      	bne.n	80017a2 <__swbuf_r+0x2e>
 80017e2:	4621      	mov	r1, r4
 80017e4:	4628      	mov	r0, r5
 80017e6:	f7ff ff9d 	bl	8001724 <_fflush_r>
 80017ea:	2800      	cmp	r0, #0
 80017ec:	d0d9      	beq.n	80017a2 <__swbuf_r+0x2e>
 80017ee:	e7d6      	b.n	800179e <__swbuf_r+0x2a>

080017f0 <__swsetup_r>:
 80017f0:	b538      	push	{r3, r4, r5, lr}
 80017f2:	4b29      	ldr	r3, [pc, #164]	@ (8001898 <__swsetup_r+0xa8>)
 80017f4:	4605      	mov	r5, r0
 80017f6:	6818      	ldr	r0, [r3, #0]
 80017f8:	460c      	mov	r4, r1
 80017fa:	b118      	cbz	r0, 8001804 <__swsetup_r+0x14>
 80017fc:	6a03      	ldr	r3, [r0, #32]
 80017fe:	b90b      	cbnz	r3, 8001804 <__swsetup_r+0x14>
 8001800:	f7ff fa3c 	bl	8000c7c <__sinit>
 8001804:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001808:	0719      	lsls	r1, r3, #28
 800180a:	d422      	bmi.n	8001852 <__swsetup_r+0x62>
 800180c:	06da      	lsls	r2, r3, #27
 800180e:	d407      	bmi.n	8001820 <__swsetup_r+0x30>
 8001810:	2209      	movs	r2, #9
 8001812:	602a      	str	r2, [r5, #0]
 8001814:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001818:	81a3      	strh	r3, [r4, #12]
 800181a:	f04f 30ff 	mov.w	r0, #4294967295
 800181e:	e033      	b.n	8001888 <__swsetup_r+0x98>
 8001820:	0758      	lsls	r0, r3, #29
 8001822:	d512      	bpl.n	800184a <__swsetup_r+0x5a>
 8001824:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001826:	b141      	cbz	r1, 800183a <__swsetup_r+0x4a>
 8001828:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800182c:	4299      	cmp	r1, r3
 800182e:	d002      	beq.n	8001836 <__swsetup_r+0x46>
 8001830:	4628      	mov	r0, r5
 8001832:	f7ff fb2b 	bl	8000e8c <_free_r>
 8001836:	2300      	movs	r3, #0
 8001838:	6363      	str	r3, [r4, #52]	@ 0x34
 800183a:	89a3      	ldrh	r3, [r4, #12]
 800183c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001840:	81a3      	strh	r3, [r4, #12]
 8001842:	2300      	movs	r3, #0
 8001844:	6063      	str	r3, [r4, #4]
 8001846:	6923      	ldr	r3, [r4, #16]
 8001848:	6023      	str	r3, [r4, #0]
 800184a:	89a3      	ldrh	r3, [r4, #12]
 800184c:	f043 0308 	orr.w	r3, r3, #8
 8001850:	81a3      	strh	r3, [r4, #12]
 8001852:	6923      	ldr	r3, [r4, #16]
 8001854:	b94b      	cbnz	r3, 800186a <__swsetup_r+0x7a>
 8001856:	89a3      	ldrh	r3, [r4, #12]
 8001858:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800185c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001860:	d003      	beq.n	800186a <__swsetup_r+0x7a>
 8001862:	4621      	mov	r1, r4
 8001864:	4628      	mov	r0, r5
 8001866:	f000 f893 	bl	8001990 <__smakebuf_r>
 800186a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800186e:	f013 0201 	ands.w	r2, r3, #1
 8001872:	d00a      	beq.n	800188a <__swsetup_r+0x9a>
 8001874:	2200      	movs	r2, #0
 8001876:	60a2      	str	r2, [r4, #8]
 8001878:	6962      	ldr	r2, [r4, #20]
 800187a:	4252      	negs	r2, r2
 800187c:	61a2      	str	r2, [r4, #24]
 800187e:	6922      	ldr	r2, [r4, #16]
 8001880:	b942      	cbnz	r2, 8001894 <__swsetup_r+0xa4>
 8001882:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8001886:	d1c5      	bne.n	8001814 <__swsetup_r+0x24>
 8001888:	bd38      	pop	{r3, r4, r5, pc}
 800188a:	0799      	lsls	r1, r3, #30
 800188c:	bf58      	it	pl
 800188e:	6962      	ldrpl	r2, [r4, #20]
 8001890:	60a2      	str	r2, [r4, #8]
 8001892:	e7f4      	b.n	800187e <__swsetup_r+0x8e>
 8001894:	2000      	movs	r0, #0
 8001896:	e7f7      	b.n	8001888 <__swsetup_r+0x98>
 8001898:	2000000c 	.word	0x2000000c

0800189c <_raise_r>:
 800189c:	291f      	cmp	r1, #31
 800189e:	b538      	push	{r3, r4, r5, lr}
 80018a0:	4605      	mov	r5, r0
 80018a2:	460c      	mov	r4, r1
 80018a4:	d904      	bls.n	80018b0 <_raise_r+0x14>
 80018a6:	2316      	movs	r3, #22
 80018a8:	6003      	str	r3, [r0, #0]
 80018aa:	f04f 30ff 	mov.w	r0, #4294967295
 80018ae:	bd38      	pop	{r3, r4, r5, pc}
 80018b0:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80018b2:	b112      	cbz	r2, 80018ba <_raise_r+0x1e>
 80018b4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80018b8:	b94b      	cbnz	r3, 80018ce <_raise_r+0x32>
 80018ba:	4628      	mov	r0, r5
 80018bc:	f000 f830 	bl	8001920 <_getpid_r>
 80018c0:	4622      	mov	r2, r4
 80018c2:	4601      	mov	r1, r0
 80018c4:	4628      	mov	r0, r5
 80018c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80018ca:	f000 b817 	b.w	80018fc <_kill_r>
 80018ce:	2b01      	cmp	r3, #1
 80018d0:	d00a      	beq.n	80018e8 <_raise_r+0x4c>
 80018d2:	1c59      	adds	r1, r3, #1
 80018d4:	d103      	bne.n	80018de <_raise_r+0x42>
 80018d6:	2316      	movs	r3, #22
 80018d8:	6003      	str	r3, [r0, #0]
 80018da:	2001      	movs	r0, #1
 80018dc:	e7e7      	b.n	80018ae <_raise_r+0x12>
 80018de:	2100      	movs	r1, #0
 80018e0:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80018e4:	4620      	mov	r0, r4
 80018e6:	4798      	blx	r3
 80018e8:	2000      	movs	r0, #0
 80018ea:	e7e0      	b.n	80018ae <_raise_r+0x12>

080018ec <raise>:
 80018ec:	4b02      	ldr	r3, [pc, #8]	@ (80018f8 <raise+0xc>)
 80018ee:	4601      	mov	r1, r0
 80018f0:	6818      	ldr	r0, [r3, #0]
 80018f2:	f7ff bfd3 	b.w	800189c <_raise_r>
 80018f6:	bf00      	nop
 80018f8:	2000000c 	.word	0x2000000c

080018fc <_kill_r>:
 80018fc:	b538      	push	{r3, r4, r5, lr}
 80018fe:	4d07      	ldr	r5, [pc, #28]	@ (800191c <_kill_r+0x20>)
 8001900:	2300      	movs	r3, #0
 8001902:	4604      	mov	r4, r0
 8001904:	4608      	mov	r0, r1
 8001906:	4611      	mov	r1, r2
 8001908:	602b      	str	r3, [r5, #0]
 800190a:	f000 f8bf 	bl	8001a8c <_kill>
 800190e:	1c43      	adds	r3, r0, #1
 8001910:	d102      	bne.n	8001918 <_kill_r+0x1c>
 8001912:	682b      	ldr	r3, [r5, #0]
 8001914:	b103      	cbz	r3, 8001918 <_kill_r+0x1c>
 8001916:	6023      	str	r3, [r4, #0]
 8001918:	bd38      	pop	{r3, r4, r5, pc}
 800191a:	bf00      	nop
 800191c:	200001b4 	.word	0x200001b4

08001920 <_getpid_r>:
 8001920:	f000 b8a4 	b.w	8001a6c <_getpid>

08001924 <_sbrk_r>:
 8001924:	b538      	push	{r3, r4, r5, lr}
 8001926:	4d06      	ldr	r5, [pc, #24]	@ (8001940 <_sbrk_r+0x1c>)
 8001928:	2300      	movs	r3, #0
 800192a:	4604      	mov	r4, r0
 800192c:	4608      	mov	r0, r1
 800192e:	602b      	str	r3, [r5, #0]
 8001930:	f000 f8c4 	bl	8001abc <_sbrk>
 8001934:	1c43      	adds	r3, r0, #1
 8001936:	d102      	bne.n	800193e <_sbrk_r+0x1a>
 8001938:	682b      	ldr	r3, [r5, #0]
 800193a:	b103      	cbz	r3, 800193e <_sbrk_r+0x1a>
 800193c:	6023      	str	r3, [r4, #0]
 800193e:	bd38      	pop	{r3, r4, r5, pc}
 8001940:	200001b4 	.word	0x200001b4

08001944 <__swhatbuf_r>:
 8001944:	b570      	push	{r4, r5, r6, lr}
 8001946:	460c      	mov	r4, r1
 8001948:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800194c:	2900      	cmp	r1, #0
 800194e:	b096      	sub	sp, #88	@ 0x58
 8001950:	4615      	mov	r5, r2
 8001952:	461e      	mov	r6, r3
 8001954:	da0d      	bge.n	8001972 <__swhatbuf_r+0x2e>
 8001956:	89a3      	ldrh	r3, [r4, #12]
 8001958:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800195c:	f04f 0100 	mov.w	r1, #0
 8001960:	bf14      	ite	ne
 8001962:	2340      	movne	r3, #64	@ 0x40
 8001964:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001968:	2000      	movs	r0, #0
 800196a:	6031      	str	r1, [r6, #0]
 800196c:	602b      	str	r3, [r5, #0]
 800196e:	b016      	add	sp, #88	@ 0x58
 8001970:	bd70      	pop	{r4, r5, r6, pc}
 8001972:	466a      	mov	r2, sp
 8001974:	f000 f848 	bl	8001a08 <_fstat_r>
 8001978:	2800      	cmp	r0, #0
 800197a:	dbec      	blt.n	8001956 <__swhatbuf_r+0x12>
 800197c:	9901      	ldr	r1, [sp, #4]
 800197e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001982:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001986:	4259      	negs	r1, r3
 8001988:	4159      	adcs	r1, r3
 800198a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800198e:	e7eb      	b.n	8001968 <__swhatbuf_r+0x24>

08001990 <__smakebuf_r>:
 8001990:	898b      	ldrh	r3, [r1, #12]
 8001992:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001994:	079d      	lsls	r5, r3, #30
 8001996:	4606      	mov	r6, r0
 8001998:	460c      	mov	r4, r1
 800199a:	d507      	bpl.n	80019ac <__smakebuf_r+0x1c>
 800199c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80019a0:	6023      	str	r3, [r4, #0]
 80019a2:	6123      	str	r3, [r4, #16]
 80019a4:	2301      	movs	r3, #1
 80019a6:	6163      	str	r3, [r4, #20]
 80019a8:	b003      	add	sp, #12
 80019aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019ac:	ab01      	add	r3, sp, #4
 80019ae:	466a      	mov	r2, sp
 80019b0:	f7ff ffc8 	bl	8001944 <__swhatbuf_r>
 80019b4:	9f00      	ldr	r7, [sp, #0]
 80019b6:	4605      	mov	r5, r0
 80019b8:	4639      	mov	r1, r7
 80019ba:	4630      	mov	r0, r6
 80019bc:	f7ff fad2 	bl	8000f64 <_malloc_r>
 80019c0:	b948      	cbnz	r0, 80019d6 <__smakebuf_r+0x46>
 80019c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80019c6:	059a      	lsls	r2, r3, #22
 80019c8:	d4ee      	bmi.n	80019a8 <__smakebuf_r+0x18>
 80019ca:	f023 0303 	bic.w	r3, r3, #3
 80019ce:	f043 0302 	orr.w	r3, r3, #2
 80019d2:	81a3      	strh	r3, [r4, #12]
 80019d4:	e7e2      	b.n	800199c <__smakebuf_r+0xc>
 80019d6:	89a3      	ldrh	r3, [r4, #12]
 80019d8:	6020      	str	r0, [r4, #0]
 80019da:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80019de:	81a3      	strh	r3, [r4, #12]
 80019e0:	9b01      	ldr	r3, [sp, #4]
 80019e2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80019e6:	b15b      	cbz	r3, 8001a00 <__smakebuf_r+0x70>
 80019e8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80019ec:	4630      	mov	r0, r6
 80019ee:	f000 f81d 	bl	8001a2c <_isatty_r>
 80019f2:	b128      	cbz	r0, 8001a00 <__smakebuf_r+0x70>
 80019f4:	89a3      	ldrh	r3, [r4, #12]
 80019f6:	f023 0303 	bic.w	r3, r3, #3
 80019fa:	f043 0301 	orr.w	r3, r3, #1
 80019fe:	81a3      	strh	r3, [r4, #12]
 8001a00:	89a3      	ldrh	r3, [r4, #12]
 8001a02:	431d      	orrs	r5, r3
 8001a04:	81a5      	strh	r5, [r4, #12]
 8001a06:	e7cf      	b.n	80019a8 <__smakebuf_r+0x18>

08001a08 <_fstat_r>:
 8001a08:	b538      	push	{r3, r4, r5, lr}
 8001a0a:	4d07      	ldr	r5, [pc, #28]	@ (8001a28 <_fstat_r+0x20>)
 8001a0c:	2300      	movs	r3, #0
 8001a0e:	4604      	mov	r4, r0
 8001a10:	4608      	mov	r0, r1
 8001a12:	4611      	mov	r1, r2
 8001a14:	602b      	str	r3, [r5, #0]
 8001a16:	f000 f821 	bl	8001a5c <_fstat>
 8001a1a:	1c43      	adds	r3, r0, #1
 8001a1c:	d102      	bne.n	8001a24 <_fstat_r+0x1c>
 8001a1e:	682b      	ldr	r3, [r5, #0]
 8001a20:	b103      	cbz	r3, 8001a24 <_fstat_r+0x1c>
 8001a22:	6023      	str	r3, [r4, #0]
 8001a24:	bd38      	pop	{r3, r4, r5, pc}
 8001a26:	bf00      	nop
 8001a28:	200001b4 	.word	0x200001b4

08001a2c <_isatty_r>:
 8001a2c:	b538      	push	{r3, r4, r5, lr}
 8001a2e:	4d06      	ldr	r5, [pc, #24]	@ (8001a48 <_isatty_r+0x1c>)
 8001a30:	2300      	movs	r3, #0
 8001a32:	4604      	mov	r4, r0
 8001a34:	4608      	mov	r0, r1
 8001a36:	602b      	str	r3, [r5, #0]
 8001a38:	f000 f820 	bl	8001a7c <_isatty>
 8001a3c:	1c43      	adds	r3, r0, #1
 8001a3e:	d102      	bne.n	8001a46 <_isatty_r+0x1a>
 8001a40:	682b      	ldr	r3, [r5, #0]
 8001a42:	b103      	cbz	r3, 8001a46 <_isatty_r+0x1a>
 8001a44:	6023      	str	r3, [r4, #0]
 8001a46:	bd38      	pop	{r3, r4, r5, pc}
 8001a48:	200001b4 	.word	0x200001b4

08001a4c <_close>:
 8001a4c:	4b02      	ldr	r3, [pc, #8]	@ (8001a58 <_close+0xc>)
 8001a4e:	2258      	movs	r2, #88	@ 0x58
 8001a50:	601a      	str	r2, [r3, #0]
 8001a52:	f04f 30ff 	mov.w	r0, #4294967295
 8001a56:	4770      	bx	lr
 8001a58:	200001b4 	.word	0x200001b4

08001a5c <_fstat>:
 8001a5c:	4b02      	ldr	r3, [pc, #8]	@ (8001a68 <_fstat+0xc>)
 8001a5e:	2258      	movs	r2, #88	@ 0x58
 8001a60:	601a      	str	r2, [r3, #0]
 8001a62:	f04f 30ff 	mov.w	r0, #4294967295
 8001a66:	4770      	bx	lr
 8001a68:	200001b4 	.word	0x200001b4

08001a6c <_getpid>:
 8001a6c:	4b02      	ldr	r3, [pc, #8]	@ (8001a78 <_getpid+0xc>)
 8001a6e:	2258      	movs	r2, #88	@ 0x58
 8001a70:	601a      	str	r2, [r3, #0]
 8001a72:	f04f 30ff 	mov.w	r0, #4294967295
 8001a76:	4770      	bx	lr
 8001a78:	200001b4 	.word	0x200001b4

08001a7c <_isatty>:
 8001a7c:	4b02      	ldr	r3, [pc, #8]	@ (8001a88 <_isatty+0xc>)
 8001a7e:	2258      	movs	r2, #88	@ 0x58
 8001a80:	601a      	str	r2, [r3, #0]
 8001a82:	2000      	movs	r0, #0
 8001a84:	4770      	bx	lr
 8001a86:	bf00      	nop
 8001a88:	200001b4 	.word	0x200001b4

08001a8c <_kill>:
 8001a8c:	4b02      	ldr	r3, [pc, #8]	@ (8001a98 <_kill+0xc>)
 8001a8e:	2258      	movs	r2, #88	@ 0x58
 8001a90:	601a      	str	r2, [r3, #0]
 8001a92:	f04f 30ff 	mov.w	r0, #4294967295
 8001a96:	4770      	bx	lr
 8001a98:	200001b4 	.word	0x200001b4

08001a9c <_lseek>:
 8001a9c:	4b02      	ldr	r3, [pc, #8]	@ (8001aa8 <_lseek+0xc>)
 8001a9e:	2258      	movs	r2, #88	@ 0x58
 8001aa0:	601a      	str	r2, [r3, #0]
 8001aa2:	f04f 30ff 	mov.w	r0, #4294967295
 8001aa6:	4770      	bx	lr
 8001aa8:	200001b4 	.word	0x200001b4

08001aac <_read>:
 8001aac:	4b02      	ldr	r3, [pc, #8]	@ (8001ab8 <_read+0xc>)
 8001aae:	2258      	movs	r2, #88	@ 0x58
 8001ab0:	601a      	str	r2, [r3, #0]
 8001ab2:	f04f 30ff 	mov.w	r0, #4294967295
 8001ab6:	4770      	bx	lr
 8001ab8:	200001b4 	.word	0x200001b4

08001abc <_sbrk>:
 8001abc:	4a04      	ldr	r2, [pc, #16]	@ (8001ad0 <_sbrk+0x14>)
 8001abe:	6811      	ldr	r1, [r2, #0]
 8001ac0:	4603      	mov	r3, r0
 8001ac2:	b909      	cbnz	r1, 8001ac8 <_sbrk+0xc>
 8001ac4:	4903      	ldr	r1, [pc, #12]	@ (8001ad4 <_sbrk+0x18>)
 8001ac6:	6011      	str	r1, [r2, #0]
 8001ac8:	6810      	ldr	r0, [r2, #0]
 8001aca:	4403      	add	r3, r0
 8001acc:	6013      	str	r3, [r2, #0]
 8001ace:	4770      	bx	lr
 8001ad0:	200001c4 	.word	0x200001c4
 8001ad4:	200001c8 	.word	0x200001c8

08001ad8 <_write>:
 8001ad8:	4b02      	ldr	r3, [pc, #8]	@ (8001ae4 <_write+0xc>)
 8001ada:	2258      	movs	r2, #88	@ 0x58
 8001adc:	601a      	str	r2, [r3, #0]
 8001ade:	f04f 30ff 	mov.w	r0, #4294967295
 8001ae2:	4770      	bx	lr
 8001ae4:	200001b4 	.word	0x200001b4

08001ae8 <_exit>:
 8001ae8:	e7fe      	b.n	8001ae8 <_exit>
	...

08001aec <_init>:
 8001aec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001aee:	bf00      	nop
 8001af0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001af2:	bc08      	pop	{r3}
 8001af4:	469e      	mov	lr, r3
 8001af6:	4770      	bx	lr

08001af8 <_fini>:
 8001af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001afa:	bf00      	nop
 8001afc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001afe:	bc08      	pop	{r3}
 8001b00:	469e      	mov	lr, r3
 8001b02:	4770      	bx	lr
